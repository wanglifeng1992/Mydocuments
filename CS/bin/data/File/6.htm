<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=Generator content="Microsoft Word 12 (filtered)">

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:黑体;
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:楷体_GB2312;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:新宋体;
	panose-1:2 1 6 9 3 1 1 1 1 1;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@新宋体";
	panose-1:2 1 6 9 3 1 1 1 1 1;}
@font-face
	{font-family:"\@黑体";
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"\@Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:"\@楷体_GB2312";}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
h1
	{margin-top:5.0pt;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:0cm;
	text-align:center;
	text-indent:10.0pt;
	font-size:18.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h2
	{mso-style-link:"标题 2 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:12.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h3
	{margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:12.0pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h4
	{margin-top:3.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	layout-grid-mode:line;
	font-weight:normal;}
h5
	{mso-style-name:"标题 5\,图题";
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	page-break-after:avoid;
	font-size:10.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	font-weight:bold;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{margin-top:3.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	line-height:150%;
	page-break-after:avoid;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	text-indent:10.0pt;
	layout-grid-mode:char;
	border:none;
	padding:0cm;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	background:navy;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Arial Unicode MS","sans-serif";}
span.2Char
	{mso-style-name:"标题 2 Char";
	mso-style-link:"标题 2";
	font-family:"Arial","sans-serif";}
p.a, li.a, div.a
	{mso-style-name:编程代码;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.25pt;
	line-height:12.0pt;
	background:#D9D9D9;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";
	color:black;}
p.a0, li.a0, div.a0
	{mso-style-name:提醒;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:10.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	line-height:12.0pt;
	punctuation-trim:leading;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";
	color:black;}
p.a1, li.a1, div.a1
	{mso-style-name:操作步骤;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.25pt;
	line-height:12.0pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:black;}
p.a2, li.a2, div.a2
	{mso-style-name:插图编号;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:center;
	text-indent:10.0pt;
	line-height:12.0pt;
	punctuation-trim:leading;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.a3, li.a3, div.a3
	{mso-style-name:特殊提示（如视频）;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:7.55pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	text-decoration:underline;}
p.a4, li.a4, div.a4
	{mso-style-name:表文;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:11.35pt;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.a5, li.a5, div.a5
	{mso-style-name:正文并列二级样式;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:12.0pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.a6, li.a6, div.a6
	{mso-style-name:正文并列一级样式;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:12.0pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.a7, li.a7, div.a7
	{mso-style-name:插图;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:12.0pt;
	punctuation-trim:leading;
	text-autospace:none;
	font-size:10.0pt;
	font-family:黑体;
	color:black;}
p.a8, li.a8, div.a8
	{mso-style-name:表题;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	text-indent:21.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.a9, li.a9, div.a9
	{mso-style-name:编程步骤;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:13.0pt;
	layout-grid-mode:char;
	background:#E0E0E0;
	font-size:9.0pt;
	font-family:"Arial","sans-serif";}
p.4, li.4, div.4
	{mso-style-name:标题4;
	margin-top:3.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:black;}
p.2, li.2, div.2
	{mso-style-name:正文缩进2个字符;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.aa, li.aa, div.aa
	{mso-style-name:代码位置;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	layout-grid-mode:char;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Arial Unicode MS","sans-serif";}
p.ab, li.ab, div.ab
	{mso-style-name:强调突出;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	background:gray;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.ac, li.ac, div.ac
	{mso-style-name:提示;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:10.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	background:white;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.ad, li.ad, div.ad
	{mso-style-name:提醒注意;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:34.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	line-height:15.6pt;
	background:#D9D9D9;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.ae, li.ae, div.ae
	{mso-style-name:插图标注;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:center;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.af, li.af, div.af
	{mso-style-name:二级项目;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:15.7pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
 /* Page Definitions */
 @page Section1
	{size:19.0cm 754.1pt;
	margin:76.55pt 52.45pt 51.05pt 52.45pt;
	layout-grid:15.1pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ZH-CN style='text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.1pt'>

<h1 style='margin-top:15.1pt;margin-right:0cm;margin-bottom:15.1pt;margin-left:
0cm;text-indent:36.0pt;line-height:normal;text-autospace:none'><a
name="_Toc240799182"></a><a name="_Toc240799098"></a><a name="_Toc239221291"></a><a
name="_Toc226946133"></a><a name="_Toc214175907"></a><a name="_Toc214171597"></a><a
name="_Toc213416979"></a><a name="_Toc213213215"><span style='font-family:黑体'>第</span></a>6<span
style='font-family:黑体'>章</span> &nbsp;<span style='font-family:黑体'>数组的使用</span></h1>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本章主要内容包括：</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>&ETH;<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:楷体_GB2312'>数组的概念</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>&ETH;<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:楷体_GB2312'>数组的定义</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>&ETH;<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:楷体_GB2312'>数组的基本操作</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>&ETH;<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:楷体_GB2312'>数组对象 Array 的使用及操作</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本章详细讲解数组的概念，以及数组的各种操作方法，特别介绍了面向对象概念下，数组作为对象的特性。无论我们是从</span>C<span
style='font-family:宋体'>语言过度到</span>C#<span style='font-family:宋体'>，还是从其它语言过渡到</span>C#<span
style='font-family:宋体'>，都应该从全新角度来理解</span>C#<span style='font-family:宋体'>中的数组，并掌握数组的数据存储和数据处理技术。</span></p>

<h2 style='margin-top:13.0pt;margin-right:0cm;margin-bottom:13.0pt;margin-left:
0cm;line-height:172%'><a name="_Toc240799183"></a><a name="_Toc240799099"></a><a
name="_Toc239221292"></a><a name="_Toc226946134"></a><a name="_Toc214175908"></a><a
name="_Toc214171598"></a><a name="_Toc213416980"></a><a name="_Toc213213216">6.1
&nbsp;</a><span style='font-family:黑体'>数组</span><span style='font-family:黑体'>的概念</span></h2>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>数组是几乎所有编程语言都有的数据类型，因为它可以方便地存储一系列数据，并可以方便地检索任意一个数据，在编程过程中，给技术人员带来很大方便。而在</span>C#<span
style='font-family:宋体'>中，数组更是被赋予了新的含义：数组对象。从面向对象的角度，重新定义了这一经典的数据类型。同时，</span>C#<span
style='font-family:宋体'>提供了许多特有的处理数组的方法和类，让编程人员更加得心应手地利用数组来实现各种数据处理功能。</span></p>

<h3><a name="_Toc240799184"></a><a name="_Toc240799100"></a><a
name="_Toc239221293"></a>6.1.1 &nbsp;<span
style='font-family:黑体'>数组定义</span></h3>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>数组对应计算机的内存，数组中存放的数据实际上存储在内存中，并按照顺序依次存放，凡是有规律的一组数据，都可以使用数组保存，就像把东西一次保存在各个房间一样；</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>数组是具有相同数据类型的项的有序集合。要访问数组中的某个项，需要同时使用数组名称及该项与数组起点之间的偏移量，或者使用数组的索引直接获取某项数据。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>数组是一种数据存储结构，它包含若干相同类型的变量。数组是使用类型声明的。数组类型是通过指定数组的元素类型、数组的秩（维数）和数组每个维度的上限和下限来定义的。基本定义格式是：</span></p>

<p class=2 style='text-indent:20.0pt'>type[] arrayName; </p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>比如：</span>int[]
x<span style='font-family:宋体'>，定义了一个整型数组，数组中的所有数据都是整型数据。数组的维数可以是一维、二维、多维等；数组元素的个数可以是动态的，也可以是静态的（预先确定的）。比如：</span></p>

<p class=2 style='text-indent:20.0pt'>int[,] x=new int[10]<span
style='font-family:宋体'>，定义了有</span>10<span style='font-family:宋体'>个元素的整型数组，是一维的；</span>int[,,]
y=new int[10,5]<span style='font-family:宋体'>，定义了有</span>10<span
style='font-family:宋体'>行</span>5<span style='font-family:宋体'>列的二维数组等。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>下面的代码分别创建一维、二维数组，并用来保存一组整数数据。声明一个由</span>
5 <span style='font-family:宋体'>个整数组成的数组：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int[]
array = new int[5];</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>此数组包含从</span>
array[0] <span style='font-family:宋体'>到</span> array[4] <span style='font-family:
宋体'>的元素。</span>new <span style='font-family:宋体'>运算符用于创建数组并将数组元素初始化为它们的默认值。在此例中，所有数组元素都初始化为零。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>可以用相同的方式声明存储字符串元素的数组：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string[]
stringArray = new string[6];</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>下列声明创建一个四行两列的二维数组：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int[,]
array = new int[4, 2];</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>下列声明创建一个三维（</span>4<span
style='font-family:宋体'>、</span>2 <span style='font-family:宋体'>和</span> 3<span
style='font-family:宋体'>）数组：</span></p>

<p class=2 style='text-indent:20.0pt'>int[, ,] array1 = new int[4, 2, 3];</p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意：数组一旦定义，就意味着所有数组元素都是相同数据类型。要更改数组元素的类型，只能使用类型转换来实现。</span></p>

<h3><a name="_Toc240799185"></a><a name="_Toc240799101"></a><a
name="_Toc239221294"></a><span
 lang=EN-US>6.1.2</span><span lang=EN-US> &nbsp;</span><span style='font-family:
黑体'>多维数组</span></h3>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>多维数组是指维数超过</span>1<span
style='font-family:宋体'>的数组，如字符串类型的多维数组，可以按照以下语法格式进行定义：</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span lang=EN-US>string[,]
strArray;</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>声明了数组后，可以指定具体的维数，并可以赋值。下面的代码创建了一个二维数组，同时给每个数组元素赋值：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int[,]
numbers = new int[3, 2] { {1, 2}, {3, 4}, {5, 6} };</span></p>

<p class=a style='text-indent:20.0pt'><span lang=EN-US style='font-size:10.0pt;
font-family:"Verdana","sans-serif";color:windowtext'>string[,] names = new
string[2, 2] { {&quot;</span><span style='font-size:10.0pt;font-family:宋体;
color:windowtext'>微软</span><span lang=EN-US style='font-size:10.0pt;font-family:
"Verdana","sans-serif";color:windowtext'>&quot;,&quot;.NET&quot;}, {&quot;SUN&quot;,&quot;JAVA&quot;}
};</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>也可以不指定维数的大小，直接定义，然后通过赋值来确定具体的维数，这个时候，维数就由所赋值的数量来决定。比如：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int[,]
numbers = new int[,] { {1, 2}, {3, 4}, {5, 6} };</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string[,]
names = new string[,] { {&quot;</span><span style='font-family:宋体;color:windowtext'>微软</span><span
lang=EN-US style='color:windowtext'>&quot;,&quot;.NET&quot;}, {&quot;SUN&quot;,&quot;JAVA&quot;}
};</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>另外，也可以忽略</span>
new <span style='font-family:宋体'>操作符，直接定义数组并赋值。比如：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int[,]
numbers = { {1, 2}, {3, 4}, {5, 6} };</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string[,]
siblings = { {&quot;Rosy&quot;, &quot;Amy&quot;}, {&quot;Peter&quot;,
&quot;Albert&quot;} }; </span></p>

<h3><a name="_Toc240799186"></a><a name="_Toc240799102"></a><a
name="_Toc239221295"></a><a name="_Toc226946135"></a><a name="_Toc214175910"></a><a
name="_Toc214171600"></a><a name="_Toc213416982"></a><a name="_Toc213213217"></a><span lang=EN-US>6.1.3</span><span lang=EN-US> &nbsp;</span><span style='font-family:黑体'>数组初始化</span></h3>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>数组定义后，默认值就是它的数据类型所定义的默认值（参见数据类型）。但我们也可以在声明数组的同时将其初始化。在这种情况下不需要维数定义，因为维数已经由初始化列表中的元素数决定。数组的位置编号索引从</span>0<span
style='font-family:宋体'>开始依次递增。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>例如下面的代码定义了一个数组并给各个元素赋初值：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int[]
array1 = new int[5] { 1, 3, 5, 7, 9 };</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>可以用相同的方式初始化字符串数组。下面声明一个字符串数组，其中每个数组元素用百家姓初始化：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string[]
baijiaxing = new string[] { &quot;</span><span style='font-family:宋体;
color:windowtext'>赵</span><span lang=EN-US style='color:windowtext'>&quot;,
&quot;</span><span style='font-family:宋体;color:windowtext'>钱</span><span
lang=EN-US style='color:windowtext'>&quot;, &quot;</span><span
style='font-family:宋体;color:windowtext'>孙</span><span lang=EN-US
style='color:windowtext'>&quot;, &quot;</span><span style='font-family:宋体;
color:windowtext'>李</span><span lang=EN-US style='color:windowtext'>&quot;,
&quot;</span><span style='font-family:宋体;color:windowtext'>周</span><span
lang=EN-US style='color:windowtext'>&quot;, &quot;</span><span
style='font-family:宋体;color:windowtext'>吴</span><span lang=EN-US
style='color:windowtext'>&quot;, &quot;</span><span style='font-family:宋体;
color:windowtext'>郑</span><span lang=EN-US style='color:windowtext'>&quot; };</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>可以声明一个数组变量但不将其初始化，但在将数组分配给此变量时必须使用</span>
new <span style='font-family:宋体'>运算符。例如：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int[]
array3;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>array3
= new int[] { 1, 3, 5, 7, 9 };&nbsp;&nbsp; // </span><span style='font-family:
宋体;color:windowtext'>正确</span></p>

<p class=a style='text-indent:18.0pt'><span style='color:windowtext'>//array3 =
{1, 3, 5, 7, 9};&nbsp;&nbsp; // </span><span style='font-family:宋体;color:windowtext'>错误</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本质上声明了一个数组实际上类似创建了一个指针变量，但并没有真正获得存储数据的内存空间，因此，还需要使用</span>
new <span style='font-family:宋体'>关键字来创建数组的实例，才能获得存储空间并存储数据。</span></p>

<p class=2 style='text-indent:20.0pt'>C#<span style='font-family:宋体'>数据类型分为值类型和引用类型，这也适合对数组的定义。数组时值类型还是引用类型，取决于数组的数据类型。如果是值类型，则创建的数组也是值类型。如果是引用类型，则创建的数组是引用类型，其中每个元素都初始化为空引用。</span></p>

<h2><a name="_Toc240799187"></a><a name="_Toc240799103"></a><a
name="_Toc239221296"><span lang=EN-US>6.2 &nbsp;</span></a><span
style='font-family:黑体'>数组的基本操作方法</span></h2>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>与数组相关的类是</span>Sysem.Array<span
style='font-family:宋体'>，提供了多种操作数组的方法，常用的主要包括以下几种对数组的操作有：</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>根据大小和下限信息分配数组。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>编制数组索引以读取或写入值，数组的索引从</span>0<span
style='font-family:宋体'>开始，依次递增。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>计算数组元素的地址（或叫做指针）。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>查询维数、边界和数组中存储的值的总数。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>对数组中数据的各种操作：搜索、排序、复制等。</span></p>

<h3><a name="_Toc226946138"></a><a name="_Toc214175916"></a><a
name="_Toc214171606"></a><a name="_Toc213416988"></a><a name="_Toc240799188"></a><a
name="_Toc240799104"></a><a name="_Toc239221297"></a><span
 lang=EN-US>6.2.1</span><span lang=EN-US> &nbsp;</span><span style='font-family:
黑体'>循环遍历数组</span></h3>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>可以使用</span>
foreach<span style='font-family:宋体'>语句实现对数组每个元素的遍历。下面的代码使用</span>foreach<span
style='font-family:宋体'>语句遍历数组</span>numArray<span style='font-family:宋体'>中的每个元素并输出元素的值。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>6-2-1<span style='font-family:宋体'>】遍历一维数组。</span></p>

<p class=2 style='text-indent:20.0pt'>(<span style='font-family:宋体'>代码位置：光盘</span>\<span
style='font-family:宋体'>源代码</span>\chapter6\testArray)</p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>namespace
testArray</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
class Program</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
static void Main(string[] args)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int[] numArray = { 1, 3, 5, 7, 9, 11, 13 };//</span><span style='font-family:
宋体;color:windowtext'>声明数组</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
foreach (int num in numArray)//</span><span style='font-family:宋体;color:windowtext'>遍历每个元素</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.Console.WriteLine(&quot;{0,20}&quot;,num.ToString());//</span><span
style='font-family:宋体;color:windowtext'>输出结果</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span><span
lang=EN-US>6-1</span><span style='font-family:宋体'>所示。</span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:20.0pt'><span
lang=EN-US><img width=154 height=99 src="6.files/image001.jpg"></span></p>

<p class=a2 style='text-indent:18.0pt'><span style='font-family:宋体'>图</span><span
lang=EN-US>6-1 </span><span style='font-family:宋体'>数组遍历</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>以下示例利用</span>foreach<span
style='font-family:宋体'>循环遍历各种类型的数组元素并输出结果，这些数组的声明方法都不相同，但最终的结果是相同的，就是输出数组的每个元素的值。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>namespace
ArraysSamp</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>class
ArraysSamp</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>static
void Main(string[] args)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>使用</span><span
lang=EN-US style='color:windowtext'> new </span><span style='font-family:宋体;
color:windowtext'>定义数组并创建存储空间，然后赋值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int[]
intArray = new int[3];</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>intArray[0]
= 3;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>intArray[1]
= 6;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>intArray[2]
= 9; </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(&quot;================&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>循环遍历每个元素，使用数组索引来获取元素的值，索引从</span><span
lang=EN-US style='color:windowtext'>0</span><span style='font-family:宋体;
color:windowtext'>开始</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>foreach
(int i in intArray)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(i.ToString()
);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}
</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string[]
strArray = new string[5] </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{&quot;</span><span
style='font-family:宋体;color:windowtext'>中国</span><span lang=EN-US
style='color:windowtext'>&quot;, &quot;</span><span style='font-family:宋体;
color:windowtext'>美国</span><span lang=EN-US style='color:windowtext'>&quot;,
&quot;</span><span style='font-family:宋体;color:windowtext'>韩国</span><span
lang=EN-US style='color:windowtext'>&quot;, &quot;</span><span
style='font-family:宋体;color:windowtext'>法国</span><span lang=EN-US
style='color:windowtext'>&quot;, &quot;</span><span style='font-family:宋体;
color:windowtext'>德国</span><span lang=EN-US style='color:windowtext'>&quot;}; </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(&quot;================&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>利用</span><span
lang=EN-US style='color:windowtext'> foreach </span><span style='font-family:
宋体;color:windowtext'>遍历每个元素</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>foreach(
string str in strArray)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=FR style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=FR style='color:windowtext'>Console.WriteLine(str);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=FR style='color:windowtext'>} </span></p>

<p class=a style='text-indent:18.0pt'><span lang=FR style='color:windowtext'>Console.WriteLine(&quot;================&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=FR style='color:windowtext'>&nbsp;&nbsp;&nbsp;
</span><span lang=EN-US style='color:windowtext'>//</span><span
style='font-family:宋体;color:windowtext'>通过赋值来定义数组的维数</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string[,]
names = new string[,] </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{&quot;</span><span
style='font-family:宋体;color:windowtext'>中国</span><span lang=EN-US
style='color:windowtext'>&quot;,&quot;</span><span style='font-family:宋体;
color:windowtext'>美国</span><span lang=EN-US style='color:windowtext'>&quot;}, </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{&quot;</span><span
style='font-family:宋体;color:windowtext'>法国</span><span lang=EN-US
style='color:windowtext'>&quot;,&quot;</span><span style='font-family:宋体;
color:windowtext'>德国</span><span lang=EN-US style='color:windowtext'>&quot;} </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>};</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>foreach(
string str in names)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(str);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}
</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}
</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>6-2<span
style='font-family:宋体'>所示。</span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm;
text-autospace:none'><span lang=EN-US><img width=143 height=134
src="6.files/image002.jpg"></span></p>

<p class=a2 style='text-indent:18.0pt'><span style='font-family:宋体'>图</span><span
lang=EN-US>6-2 </span><span style='font-family:宋体'>各种定义方式的输出结果</span></p>

<h3><a name="_Toc240799189"></a><a name="_Toc240799105"></a><a
name="_Toc239221298"></a><span
 lang=EN-US>6.2.2</span><span lang=EN-US> &nbsp;</span><span style='font-family:
黑体'>使用</span><span lang=EN-US>Array </span><span style='font-family:黑体'>来操作数组</span></h3>

<p class=2 style='text-indent:20.0pt'>VS.NET <span style='font-family:宋体'>的</span>.NET
FrameWork <span style='font-family:宋体'>库中有一个</span> Array <span
style='font-family:宋体'>类，提供了多种对数据的操作，本质上，数组类型也是来源于这个类。</span>Array<span
style='font-family:宋体'>类提供的主要操作有：</span></p>

<p class=MsoNormal style='margin-left:47.25pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>创建数组。</span></p>

<p class=MsoNormal style='margin-left:47.25pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>操纵数组。</span></p>

<p class=MsoNormal style='margin-left:47.25pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>搜索数组。</span></p>

<p class=MsoNormal style='margin-left:47.25pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-family:宋体'>对数组排序。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>表</span>6-1<span
style='font-family:宋体'>中说明了</span>Array<span style='font-family:宋体'>类中有关数组的属性的设置。</span></p>

<p class=a8 style='text-indent:20.0pt'><span style='font-family:黑体'>表</span><span
lang=EN-US>6-1</span><span style='font-family:黑体'>数组属性说明。</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;border-collapse:collapse;border:none'>
 <tr>
  <td width="22%" valign=top style='width:22.72%;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>属性</span></p>
  </td>
  <td width="77%" valign=top style='width:77.28%;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>说明</span></p>
  </td>
 </tr>
 <tr>
  <td width="22%" valign=top style='width:22.72%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>IsFixedSize</span></p>
  </td>
  <td width="77%" valign=top style='width:77.28%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>判断数组是否是固定大小的数组。</span></p>
  </td>
 </tr>
 <tr>
  <td width="22%" valign=top style='width:22.72%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>IsReadOnly</span></p>
  </td>
  <td width="77%" valign=top style='width:77.28%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>判断数组是否是只读的。</span></p>
  </td>
 </tr>
 <tr>
  <td width="22%" valign=top style='width:22.72%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Length</span></p>
  </td>
  <td width="77%" valign=top style='width:77.28%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>返回数组的长度，即所有元素的总数。</span></p>
  </td>
 </tr>
 <tr>
  <td width="22%" valign=top style='width:22.72%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Rank</span></p>
  </td>
  <td width="77%" valign=top style='width:77.28%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>返回数组的维数（一维、二维、三维等）。</span></p>
  </td>
 </tr>
</table>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>Array </span><span
style='font-family:宋体'>中提供的操作数组的方法也有很多</span><span style='font-family:宋体'>，</span><span
style='font-family:宋体'>表</span><span lang=EN-US>6-2</span><span
style='font-family:宋体'>中说明了各种方法的作用。后续示例中将用到这些方法。</span></p>

<p class=a8 style='text-indent:20.0pt'><span style='font-family:黑体'>表</span><span
lang=EN-US>6-2</span><span style='font-family:黑体'>数组操作方法。</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;border-collapse:collapse;border:none'>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>方法</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>说明</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>BinarySearch (Array,
  Object) </span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>使用二进制搜索方法搜索一维、排序数组。如果找到</span><span
  lang=EN-US> value</span><span style='font-family:宋体'>，则为指定</span><span
  lang=EN-US> array </span><span style='font-family:宋体'>中的指定</span><span
  lang=EN-US> value </span><span style='font-family:宋体'>的索引。如果找不到</span><span
  lang=EN-US> value </span><span style='font-family:宋体'>且</span><span
  lang=EN-US> value </span><span style='font-family:宋体'>小于</span><span
  lang=EN-US> array </span><span style='font-family:宋体'>中的一个或多个元素，则为一个负数，该负数是大于</span><span
  lang=EN-US> value </span><span style='font-family:宋体'>的第一个元素的索引的按位求补。如果找不到</span><span
  lang=EN-US> value </span><span style='font-family:宋体'>且</span><span
  lang=EN-US> value </span><span style='font-family:宋体'>大于</span><span
  lang=EN-US> array </span><span style='font-family:宋体'>中的任何元素，则为一个负数，该负数是（最后一个元素的索引加</span><span
  lang=EN-US> 1</span><span style='font-family:宋体'>）的按位求补。</span> </p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Clear</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>清除数组所有元素并把元素数设为</span><span
  lang=EN-US>0</span><span style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Clone</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>创建数组的副本。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Copy (Array, Array,
  Int32) </span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>在两个数组之间进行复制。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>CopyTo (Array, Int32)
  </span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>将当前一维</span><span
  lang=EN-US> Array </span><span style='font-family:宋体'>的所有元素复制到指定的一维</span><span
  lang=EN-US> Array </span><span style='font-family:宋体'>中（从指定的目标</span><span
  lang=EN-US> Array </span><span style='font-family:宋体'>索引开始）。索引指定为</span><span
  lang=EN-US> 32 </span><span style='font-family:宋体'>位整数。</span> </p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>CreateInstance (Type,
  Int32) </span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>创建使用从零开始的索引、具有指定</span><span
  lang=EN-US> Type </span><span style='font-family:宋体'>和长度的一维</span><span
  lang=EN-US> Array</span><span style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>GetLength</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>返回指定数组维中的元素数。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>GetLowerBound</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>返回数组维数的下限。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>GetUpperBound</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>返回数组维数的上限。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>GetValue</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>返回指定数组元素的值。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>IndexOf (Array, Object)
  </span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>搜索指定的对象，并返回整个一维数组中第一个匹配项的索引。如果在整个</span><span
  lang=EN-US> array </span><span style='font-family:宋体'>中找到</span><span
  lang=EN-US> value </span><span style='font-family:宋体'>的匹配项，则为第一个匹配项的索引；否则为该数组的下限减</span><span
  lang=EN-US> 1</span><span style='font-family:宋体'>。</span> </p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>LastIndexOf (Array,
  Object) </span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>搜索指定的对象，并返回整个一维数组中最后一个匹配项的索引。如果在整个</span><span
  lang=EN-US> array </span><span style='font-family:宋体'>中找到</span><span
  lang=EN-US> value </span><span style='font-family:宋体'>的匹配项，则为最后一个匹配项的索引；否则为该数组的下限减</span><span
  lang=EN-US> 1</span><span style='font-family:宋体'>。</span> </p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Reverse (Array) </span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>反转一维数组中元素的全部或部分顺序。</span></p>
  </td>
 </tr>
 <tr>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>SetValue(obj,index1,index2)</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>给指定的元素设置指定的值。</span></p>
  </td>
 </tr>
 <tr style='height:18.75pt'>
  <td width="32%" valign=top style='width:32.84%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:18.75pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Sort(array)</span></p>
  </td>
  <td width="67%" valign=top style='width:67.16%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:18.75pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>对一维数组进行排序。</span></p>
  </td>
 </tr>
</table>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>下面通过几个示例，分别练习如何使用以上属性和方法操作数组。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>1. </span><span
style='font-family:楷体_GB2312'>创建数组并输出其长度</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>6-2-2<span style='font-family:宋体'>】计算固定和可变数组的长度。</span></p>

<p class=2 style='text-indent:20.0pt'>(<span style='font-family:宋体'>代码位置：光盘</span>\<span
style='font-family:宋体'>源代码</span>\chapter6\arrayLength)</p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>namespace
arrayLength</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
class Program</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
static void Main(string[] args)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int[] intArray;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>声明一个固定长度的数组</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
intArray = new int[3] { 0, 1, 2 };</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>声明一个</span><span
lang=EN-US style='color:windowtext'> 2x2 </span><span style='font-family:宋体;
color:windowtext'>的可变长度的数组</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string[,] names = new string[,] { { &quot;A&quot;, &quot;B&quot; }, {
&quot;C&quot;, &quot;D&quot; } };</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if (intArray.IsFixedSize)//</span><span style='font-family:宋体;color:windowtext'>判断是否是固定的</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>固定长度数组：</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>长度大小</span><span
lang=EN-US style='color:windowtext'> :&quot; + intArray.Length.ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>对可变数组进行长度计算</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if (names.IsFixedSize)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>可变长度数组：</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>长度大小</span><span
lang=EN-US style='color:windowtext'> :&quot; + names.Length.ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>数组维数</span><span
lang=EN-US style='color:windowtext'> :&quot; + names.Rank.ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>6-3<span
style='font-family:宋体'>所示。</span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm;
vertical-align:top'><span lang=EN-US><img width=126 height=65
src="6.files/image003.jpg"></span></p>

<p class=a2 style='text-indent:18.0pt'><span style='font-family:宋体'>图</span><span
lang=EN-US>6-3 </span><span style='font-family:宋体'>数组长度计算</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>数组属性处理通常用于对数组的基本特性的判断，当我们需要通过索引方式遍历数组的时候，数组的长度尤为有用，可以让我们获取循环的次数。但要注意，对于多维数组，长度是所有元素数量的综合，不是其中某一维的元素的数量。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>2. </span><span
style='font-family:楷体_GB2312'>搜索数组中的元素</span></h4>

<p class=2 style='text-indent:20.0pt'>BinarySearch<span style='font-family:
宋体'>可以用来搜索数组中的元素。采用二进制搜索方式，因此不会受字符编码的影响。该方法至少需要两个参数：数组和要搜索的元素。如果找到要搜索的元素，则返回元素所在的索引值（从</span>0<span
style='font-family:宋体'>开始计算），否则返回负数。以下代码示例是采用</span>BinarySearch <span
style='font-family:宋体'>方法来搜索两个数组，并返回找到的元素的索引位置。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>6-2-3<span style='font-family:宋体'>】二进制搜索数组。</span></p>

<p class=2 style='text-indent:20.0pt'>(<span style='font-family:宋体'>代码位置：光盘源代码</span>\chapter6\binarySearch)</p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>namespace
binarySearch</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
class Program</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
static void Main(string[] args)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>定义数组</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int[] intArray = new int[3] { 0, 1, 2 };</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string[] names =
new string[] { &quot;</span><span style='font-family:宋体;color:windowtext'>红</span><span
lang=EN-US style='color:windowtext'>&quot;, &quot;</span><span
style='font-family:宋体;color:windowtext'>黄</span><span lang=EN-US
style='color:windowtext'>&quot;, &quot;</span><span style='font-family:宋体;
color:windowtext'>蓝</span><span lang=EN-US style='color:windowtext'>&quot;,
&quot;</span><span style='font-family:宋体;color:windowtext'>白</span><span
lang=EN-US style='color:windowtext'>&quot; };</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
object obj1 = &quot;</span><span style='font-family:宋体;color:windowtext'>蓝</span><span
lang=EN-US style='color:windowtext'>&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
object obj2 = 1;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>执行搜索</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int retVal = Array.BinarySearch(names, obj1);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if (retVal &gt;= 0)//</span><span style='font-family:宋体;color:windowtext'>判断是否找到</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>元素索引：</span><span
lang=EN-US style='color:windowtext'> &quot; + retVal.ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
else</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>没有找到</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
retVal = Array.BinarySearch(intArray, obj2);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if (retVal &gt;= 0)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>元素索引：</span><span
lang=EN-US style='color:windowtext'> &quot; + retVal.ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
else</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>没有找到</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>6-4<span
style='font-family:宋体'>所示。</span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:20.0pt'><span
lang=EN-US><img width=104 height=45 src="6.files/image004.jpg"></span></p>

<p class=a2 style='text-indent:18.0pt'><span style='font-family:宋体'>图</span><span
lang=EN-US>6-4 </span><span style='font-family:宋体'>搜索结果</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>3. </span><span
style='font-family:楷体_GB2312'>数组排序</span></h4>

<p class=2 style='text-indent:20.0pt'>Sort <span style='font-family:宋体'>方法可以对数组的所有或者部分元素进行排序，排序方式是按照元素的值进行的，最简单的用法就是直接对一个数组进行元素排序，并把排序后的结果保存在原数组中。以下示例代码实现了对数组的排序操作。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>6-2-4<span style='font-family:宋体'>】数组排序。</span></p>

<p class=2 style='text-indent:20.0pt'>(<span style='font-family:宋体'>代码位置：光盘源代码</span>\chapter6\arraySort)</p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>namespace
arraySort</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
class Program</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
static void Main(string[] args)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string[] names = new string[] { &quot;C&quot;, &quot;B&quot;, &quot;A&quot;,
&quot;D&quot; };</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>原数组元素的值</span><span
lang=EN-US style='color:windowtext'>:&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (string str in names)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(str);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>对数组进行排序，然后输出结果</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span lang=FR style='color:windowtext'>Console.WriteLine(&quot;</span><span
style='font-family:宋体;color:windowtext'>排序后的值</span><span lang=FR
style='color:windowtext'>:&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=FR style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span lang=EN-US style='color:windowtext'>Array.Sort(names);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
foreach (string str in names)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(str);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>6-5<span
style='font-family:宋体'>所示。</span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:20.0pt'><span
lang=EN-US><img width=144 height=131 src="6.files/image005.jpg"></span></p>

<p class=a2 style='text-indent:18.0pt'><span style='font-family:宋体'>图</span><span
lang=EN-US>6-5 </span><span style='font-family:宋体'>数组排序结果</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意：如果数组中的值是中文字符串，比如是：</span><span
lang=EN-US style='color:windowtext'>{ &quot;</span><span style='font-family:
楷体_GB2312;color:windowtext'>甲</span><span lang=EN-US style='color:windowtext'>&quot;,
&quot;</span><span style='font-family:楷体_GB2312;color:windowtext'>乙</span><span
lang=EN-US style='color:windowtext'>&quot;, &quot;</span><span
style='font-family:楷体_GB2312;color:windowtext'>丙</span><span lang=EN-US
style='color:windowtext'>&quot;, &quot;</span><span style='font-family:楷体_GB2312;
color:windowtext'>丁</span><span lang=EN-US style='color:windowtext'>&quot; }</span><span
style='font-family:楷体_GB2312;color:windowtext'>，则排序方式按照汉语拼音方式进行排序。排序结果是：丙丁甲乙。如果要对部分元素进行排序，则使用：</span><span
lang=EN-US style='color:windowtext'>Sort(array,</span><span style='font-family:
楷体_GB2312;color:windowtext'>索引起点，索引终点</span><span lang=EN-US style='color:windowtext'>)</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>4. </span><span
style='font-family:楷体_GB2312'>获取或设置元素的值</span></h4>

<p class=2 style='text-indent:20.0pt'>GetValue<span style='font-family:宋体'>和</span>SetValue<span
style='font-family:宋体'>是一对相反的操作方法，分别用来获取和设置数组元素的值。通过指定数组的索引位置来确定要处理的数组的元素。以下代码创建数组并对其进行值的设置和获取操作。通过指定数组的维数和元素的位置来处理。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>6-2-5<span style='font-family:宋体'>】设置数组的值。</span></p>

<p class=2 style='text-indent:20.0pt'>(<span style='font-family:宋体'>代码位置：光盘</span>\<span
style='font-family:宋体'>源代码</span>\chapter6\getSetValue)</p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>namespace
getSetValue</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
class Program</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
static void Main(string[] args)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Array names = Array.CreateInstance(typeof(String), 2, 4);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>不是采用赋值的方式来设置数组的值，而是使用</span><span
lang=EN-US style='color:windowtext'> SetValue </span><span style='font-family:
宋体;color:windowtext'>方法来设置</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
names.SetValue(&quot;Rosy&quot;, 0, 0);//</span><span style='font-family:宋体;
color:windowtext'>给数组的第</span><span lang=EN-US style='color:windowtext'>1</span><span
style='font-family:宋体;color:windowtext'>维的第</span><span lang=EN-US
style='color:windowtext'>1</span><span style='font-family:宋体;color:windowtext'>个元素设置值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
names.SetValue(&quot;Amy&quot;, 0, 1);//</span><span style='font-family:宋体;
color:windowtext'>给数组的第</span><span lang=EN-US style='color:windowtext'>1</span><span
style='font-family:宋体;color:windowtext'>维的第</span><span lang=EN-US
style='color:windowtext'>2</span><span style='font-family:宋体;color:windowtext'>个元素设置值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
names.SetValue(&quot;Peter&quot;, 0, 2);//</span><span style='font-family:宋体;
color:windowtext'>给数组的第</span><span lang=EN-US style='color:windowtext'>1</span><span
style='font-family:宋体;color:windowtext'>维的第</span><span lang=EN-US
style='color:windowtext'>3</span><span style='font-family:宋体;color:windowtext'>个元素设置值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
names.SetValue(&quot;Albert&quot;, 0, 3);//</span><span style='font-family:
宋体;color:windowtext'>给数组的第</span><span lang=EN-US style='color:windowtext'>1</span><span
style='font-family:宋体;color:windowtext'>维的第</span><span lang=EN-US
style='color:windowtext'>4</span><span style='font-family:宋体;color:windowtext'>个元素设置值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
names.SetValue(&quot;Mel&quot;, 1, 0);//</span><span style='font-family:宋体;
color:windowtext'>给数组的第</span><span lang=EN-US style='color:windowtext'>2</span><span
style='font-family:宋体;color:windowtext'>维的第</span><span lang=EN-US
style='color:windowtext'>1</span><span style='font-family:宋体;color:windowtext'>个元素设置值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
names.SetValue(&quot;Mongee&quot;, 1, 1);//</span><span style='font-family:
宋体;color:windowtext'>给数组的第</span><span lang=EN-US style='color:windowtext'>2</span><span
style='font-family:宋体;color:windowtext'>维的第</span><span lang=EN-US
style='color:windowtext'>2</span><span style='font-family:宋体;color:windowtext'>个元素设置值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names.SetValue(&quot;Luma&quot;,
1, 2);//</span><span style='font-family:宋体;color:windowtext'>给数组的第</span><span
lang=EN-US style='color:windowtext'>2</span><span style='font-family:宋体;
color:windowtext'>维的第</span><span lang=EN-US style='color:windowtext'>3</span><span
style='font-family:宋体;color:windowtext'>个元素设置值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
names.SetValue(&quot;Lara&quot;, 1, 3);//</span><span style='font-family:宋体;
color:windowtext'>给数组的第</span><span lang=EN-US style='color:windowtext'>2</span><span
style='font-family:宋体;color:windowtext'>维的第</span><span lang=EN-US
style='color:windowtext'>4</span><span style='font-family:宋体;color:windowtext'>个元素设置值</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int items1 = names.GetLength(0);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int items2 = names.GetLength(1);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
for (int i = 0; i &lt; items1; i++)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for
(int j = 0; j &lt; items2; j++)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(i.ToString() + &quot;,&quot; + j.ToString() + &quot;: &quot;
+ names.GetValue(i, j));</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>6-6<span
style='font-family:宋体'>所示。</span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:20.0pt'><span
lang=EN-US><img width=145 height=93 src="6.files/image006.jpg"></span></p>

<p class=a2 style='text-indent:18.0pt'><span style='font-family:宋体'>图</span><span
lang=EN-US>6-6 </span><span style='font-family:宋体'>设置结果</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>5. </span><span
style='font-family:楷体_GB2312'>其它方法</span></h4>

<p class=2 style='text-indent:20.0pt'>Reverse<span style='font-family:宋体'>方法可以翻转数组元素的顺序。与排序类似，只要使用数组参数就可以实现翻转处理。</span></p>

<p class=2 style='text-indent:20.0pt'>Clear<span style='font-family:宋体'>方法则可以删除数组中所有元素的值，并将数组的长度设为</span>0<span
style='font-family:宋体'>。这个方法有三个参数：数组、开始索引位置、元素数目。比如：</span> </p>

<p class=2 style='text-indent:20.0pt'>Array.Clear(names, 1, 2);&nbsp; </p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>清除数组</span>
names<span style='font-family:宋体'>中从第</span>2<span style='font-family:宋体'>个元素开始的连续</span>2<span
style='font-family:宋体'>个元素。</span></p>

<p class=2 style='text-indent:20.0pt'>GetLength<span style='font-family:宋体'>方法也是用来获取数组长度的，但它返回的是指定的维度的长度，不是总长度。</span></p>

<p class=2 style='text-indent:20.0pt'>GetLowerBound <span style='font-family:
宋体'>和</span>GetUppperBound<span style='font-family:宋体'>则可以返回数组维度的上下限的值。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>以上方法都需要使用数组的索引作为参数。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>下面的代码示例分别实现了数组长度的获取，以及数组上下限的值。同时也演示了数组的复制操作。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>6-2-6<span style='font-family:宋体'>】数组的其它操作。</span></p>

<p class=2 style='text-indent:20.0pt'>(<span style='font-family:宋体'>代码位置：光盘</span>\<span
style='font-family:宋体'>源代码</span>\chapter6\arrayOther)</p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>namespace
arrayOther</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
class Program</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
static void Main(string[] args)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>定义一个一维数组，长度是</span><span
lang=EN-US style='color:windowtext'>4</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string[] names = new string[] { &quot;Rosy&quot;, &quot;Amy&quot;,
&quot;Peter&quot;, &quot;Albert&quot; };</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(names.GetLength(0).ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(names.GetLowerBound(0).ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(names.GetUpperBound(0).ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Copy</span><span style='font-family:宋体;
color:windowtext'>方法复制数组的全部或部分到其它数组中。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
* CopyTo</span><span style='font-family:宋体;color:windowtext'>方法复制数组所有元素到一个一维数组中。</span><span
lang=EN-US style='color:windowtext'>*/</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Array oddArray = Array.CreateInstance(Type.GetType(&quot;System.Int32&quot;),
5);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>设置数组的值为：</span><span
lang=EN-US style='color:windowtext'>1,3,5,7,9</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
oddArray.SetValue(1, 0);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
oddArray.SetValue(3, 1);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
oddArray.SetValue(5, 2);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
oddArray.SetValue(7, 3);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
oddArray.SetValue(9, 4);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>创建一个新的数组，类型是</span><span
lang=EN-US style='color:windowtext'> Object </span><span style='font-family:
宋体;color:windowtext'>类型，长度是</span><span lang=EN-US style='color:windowtext'>5</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Array objArray = Array.CreateInstance(Type.GetType(&quot;System.Object&quot;),
5);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;//</span><span style='font-family:宋体;color:windowtext'>复制数组</span><span
lang=EN-US style='color:windowtext'> oddArray </span><span style='font-family:
宋体;color:windowtext'>中的前</span><span lang=EN-US style='color:windowtext'>4</span><span
style='font-family:宋体;color:windowtext'>个元素到数组</span><span lang=EN-US
style='color:windowtext'> objArray</span><span style='font-family:宋体;
color:windowtext'>中</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Array.Copy(oddArray, oddArray.GetLowerBound(0), objArray,
objArray.GetLowerBound(0), 4);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int items1 = objArray.GetUpperBound(0);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>循环遍历输出复制的结果</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
for (int i = 0; i &lt; items1; i++)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(objArray.GetValue(i).ToString());</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>6-8<span
style='font-family:宋体'>所示。</span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:20.0pt'><span
lang=EN-US><img width=144 height=104 src="6.files/image007.jpg"></span></p>

<p class=a2 style='text-indent:18.0pt'><span style='font-family:宋体'>图</span><span
lang=EN-US>6-8 </span><span style='font-family:宋体'>处理结果</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意：</span><span lang=EN-US
style='color:windowtext'>GetLowerBound</span><span style='font-family:楷体_GB2312;
color:windowtext'>和</span><span lang=EN-US style='color:windowtext'>GetUpperBound</span><span
style='font-family:楷体_GB2312;color:windowtext'>返回的是数组的索引限定值，这些值不是数组的长度。比如：</span><span
lang=EN-US style='color:windowtext'>GetUpperBound</span><span style='font-family:
楷体_GB2312;color:windowtext'>返回</span><span lang=EN-US style='color:windowtext'>3</span><span
style='font-family:楷体_GB2312;color:windowtext'>，则表示数组索引最大是</span><span
lang=EN-US style='color:windowtext'>3</span><span style='font-family:楷体_GB2312;
color:windowtext'>，而数组长度实际上应该是</span><span lang=EN-US style='color:windowtext'>4</span><span
style='font-family:楷体_GB2312;color:windowtext'>，因为数组索引是从</span><span
lang=EN-US style='color:windowtext'>0</span><span style='font-family:楷体_GB2312;
color:windowtext'>开始计算的。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本例中还涉及到一个“</span>System.Object<span
style='font-family:宋体'>”类型，实际上就是通用对象类型，可以代表任何数据类型，当具体赋值的时候，系统会根据具体的值的类型来处理赋值。也就是，当无法明确确定数据类型的时候，可以用该类型临时替代。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>“</span>System.Int32<span
 style='font-family:宋体'>”</span><span style='font-family:宋体'>就是我们知道的整数类型，这是比较全面的表达方法。而</span>int<span
style='font-family:宋体'>是简洁的表达方法，也就是别名。</span></p>

</div>

</body>

</html>
