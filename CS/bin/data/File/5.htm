<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=Generator content="Microsoft Word 12 (filtered)">

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:黑体;
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:楷体_GB2312;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:新宋体;
	panose-1:2 1 6 9 3 1 1 1 1 1;}
@font-face
	{font-family:Georgia;
	panose-1:2 4 5 2 5 4 5 2 3 3;}
@font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@新宋体";
	panose-1:2 1 6 9 3 1 1 1 1 1;}
@font-face
	{font-family:"\@黑体";
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"\@Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:"\@楷体_GB2312";}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
h1
	{margin-top:5.0pt;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:0cm;
	text-align:center;
	text-indent:10.0pt;
	font-size:18.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h2
	{mso-style-link:"标题 2 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:12.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h3
	{margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:12.0pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h4
	{margin-top:3.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	layout-grid-mode:line;
	font-weight:normal;}
h5
	{mso-style-name:"标题 5\,图题";
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	page-break-after:avoid;
	font-size:10.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	font-weight:bold;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{margin-top:3.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	line-height:150%;
	page-break-after:avoid;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	text-indent:10.0pt;
	layout-grid-mode:char;
	border:none;
	padding:0cm;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	text-indent:10.0pt;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	background:navy;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:宋体;}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	background:#C3DBFF;
	font-size:11.5pt;
	font-family:"Lucida Console";}
span.2Char
	{mso-style-name:"标题 2 Char";
	mso-style-link:"标题 2";
	font-family:"Arial","sans-serif";}
p.a, li.a, div.a
	{mso-style-name:编程代码;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.25pt;
	line-height:12.0pt;
	background:#D9D9D9;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";
	color:black;}
p.a0, li.a0, div.a0
	{mso-style-name:提醒;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:10.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	line-height:12.0pt;
	punctuation-trim:leading;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";
	color:black;}
p.a1, li.a1, div.a1
	{mso-style-name:操作步骤;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.25pt;
	line-height:12.0pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:black;}
p.a2, li.a2, div.a2
	{mso-style-name:插图编号;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:center;
	text-indent:18.0pt;
	line-height:12.0pt;
	punctuation-trim:leading;
	text-autospace:none;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.a3, li.a3, div.a3
	{mso-style-name:特殊提示（如视频）;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:7.55pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	text-decoration:underline;}
p.a4, li.a4, div.a4
	{mso-style-name:表文;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:11.35pt;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.a5, li.a5, div.a5
	{mso-style-name:正文并列二级样式;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:12.0pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.a6, li.a6, div.a6
	{mso-style-name:正文并列一级样式;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:12.0pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.a7, li.a7, div.a7
	{mso-style-name:插图;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:12.0pt;
	punctuation-trim:leading;
	text-autospace:none;
	font-size:10.0pt;
	font-family:黑体;
	color:black;}
span.parameter
	{mso-style-name:parameter;
	font-style:normal;}
span.cs
	{mso-style-name:cs;
	display:none;}
p.a8, li.a8, div.a8
	{mso-style-name:表题;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	text-indent:21.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
span.vb
	{mso-style-name:vb;
	display:none;}
span.cpp
	{mso-style-name:cpp;
	display:none;}
span.nu
	{mso-style-name:nu;}
span.placeholder
	{mso-style-name:placeholder;
	font-style:normal;}
span.keyword
	{mso-style-name:keyword;
	font-weight:bold;}
span.code
	{mso-style-name:code;
	font-family:"Courier New";
	color:#000066;}
span.copycode
	{mso-style-name:copycode;
	color:blue;
	font-weight:normal;
	text-decoration:underline;}
span.ui
	{mso-style-name:ui;
	font-weight:normal;}
span.input
	{mso-style-name:input;
	font-weight:normal;}
p.abstract, li.abstract, div.abstract
	{mso-style-name:abstract;
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:宋体;}
p.a9, li.a9, div.a9
	{mso-style-name:编程步骤;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:13.0pt;
	layout-grid-mode:char;
	background:#E0E0E0;
	font-size:9.0pt;
	font-family:"Arial","sans-serif";}
p.4, li.4, div.4
	{mso-style-name:标题4;
	margin-top:3.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:black;}
p.2, li.2, div.2
	{mso-style-name:正文缩进2个字符;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.aa, li.aa, div.aa
	{mso-style-name:代码位置;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	layout-grid-mode:char;
	punctuation-trim:leading;
	font-size:10.0pt;
	font-family:"Arial Unicode MS","sans-serif";}
p.ab, li.ab, div.ab
	{mso-style-name:强调突出;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	background:gray;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
p.ac, li.ac, div.ac
	{mso-style-name:提示;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:10.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	background:white;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
p.ad, li.ad, div.ad
	{mso-style-name:提醒注意;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:34.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	line-height:15.6pt;
	background:#D9D9D9;
	font-size:9.0pt;
	font-family:"Times New Roman","serif";}
 /* Page Definitions */
 @page Section1
	{size:19.0cm 754.1pt;
	margin:76.55pt 52.45pt 51.05pt 52.45pt;
	layout-grid:15.1pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.1pt'>

<h1 style='margin-top:15.1pt;margin-right:0cm;margin-bottom:15.1pt;margin-left:
0cm;text-indent:36.0pt;line-height:normal;text-autospace:none'><a
name="_Toc240797281"></a><a name="_Toc239221208"></a><a name="_Toc226946141"></a><a
name="_Toc214175922"></a><a name="_Toc214171612"></a><a name="_Toc213416994"></a><a
name="_Toc213213223"><span style='font-family:黑体'>第</span></a>5<span
style='font-family:黑体'>章</span> &nbsp;<span style='font-family:黑体'>字符串操作</span></h1>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本章主要内容包括：</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>&ETH; </span><span style='font-family:楷体_GB2312'>字符串定义及操作</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>&ETH; </span><span style='font-family:楷体_GB2312'>StringBuilder
的使用</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>&ETH; </span><span style='font-family:楷体_GB2312'>正则表达式的基本使用</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-family:Wingdings'>&ETH; </span><span style='font-family:楷体_GB2312'>正则表达式的高级使用</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串处理是非常重要的技术，几乎在所有的软件开发中，都要不断使用字符串处理技术。今天的计算机系统早已超出简单的科学计算的范畴，不但可以进行文字编辑、科学计算，还能实现人工智能等等。字符串处理作为特殊的计算方式，已经成为任何编程语言的核心技术。本章介绍</span>C#
<span style='font-family:宋体'>中的字符串处理技术。</span></p>

<h2 style='margin-top:13.0pt;margin-right:0cm;margin-bottom:13.0pt;margin-left:
0cm;line-height:172%'><a name="_Toc240797282"></a><a name="_Toc239221209"></a><a
name="_Toc226946142"></a><a name="_Toc214175923"></a><a name="_Toc214171613"></a><a
name="_Toc213416995"><span lang=EN-US>5.1 &nbsp;</span></a><span
style='font-family:黑体'>字符串</span></h2>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串常用来存储一串文字或者说字符，比如姓名或者一段话。例如，网站用包含用户名的专用问候语来响应新登录的用户的情况，使用字符串保存用户名和密码等。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串是一种数据类型，同时也是对象。可以把文本文件的内容看做字符串，也可以把一串数字看做字符串，只要按照字符串的定义规则，任何数据都可以转化为字符串。</span></p>

<h3><a name="_Toc240797283"></a><a name="_Toc239221210"></a><span lang=EN-US>5.1.1</span><span lang=EN-US> &nbsp;</span><span style='font-family:黑体'>定义</span></h3>

<p class=2 style='text-indent:20.0pt'>C# <span style='font-family:宋体'>字符串是使用</span>
string <span style='font-family:宋体'>关键字声明的、由一个或多个字符构成的一组字符，</span>string <span
style='font-family:宋体'>关键字是</span> C# <span style='font-family:宋体'>语言中对应于</span>
System.String <span style='font-family:宋体'>类的别名。字符串是使用引号声明的，如下面的示例所示：</span></p>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>string greeting = &quot;</span><span
style='font-family:宋体'>嗨</span><span style='font-family:宋体'>，</span><span
style='font-family:宋体'>你好</span><span lang=EN-US>!&quot;;</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串可以进行“加”运算，实际上就是两个或多个字符串的联接。如下面的示例所示</span><span
style='font-family:宋体'>：</span></p>

<p class=a><span lang=EN-US>s1+=s2;</span></p>

<p class=a><span lang=EN-US>s1=s1+s2+s3;</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>如果需要包括引号作为字符串中的一个字符</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>请使用转义符</span><span
style='font-family:宋体'>“</span><span lang=EN-US>\</span><span style='font-family:
宋体'>”</span><span style='font-family:宋体'>来转义</span><span style='font-family:
宋体'>，</span><span style='font-family:宋体'>或者在字符串前使用</span><span
style='font-family:宋体'>“</span><span lang=EN-US>@</span><span style='font-family:
宋体'>”</span><span style='font-family:宋体'>来转义</span><span style='font-family:
宋体'>，</span><span style='font-family:宋体'>这样编译器就会知道引号内容部的引号不是用来定义字符串的。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串对象不可变，因此一旦创建就不能更改。对字符串进行操作的方法实际会返回新的字符串对象。因此，出于性能方面的考虑，大量连接或其他涉及的字符串操作应通过</span>
StringBuilder <span style='font-family:宋体'>类来执行。</span></p>

<p class=a0 style='margin-left:0cm;text-indent:0cm'><span style='font-family:
楷体_GB2312;color:windowtext'>注意事项：</span></p>

<p class=a0 style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='font-family:Wingdings;color:windowtext'>l&nbsp; </span><span
style='font-family:楷体_GB2312;color:windowtext'>负数：存放在</span><span lang=EN-US
style='color:windowtext'> String </span><span style='font-family:楷体_GB2312;
color:windowtext'>中的字符无符号，因此不能表示负值。在任何情况下都不应使用</span><span lang=EN-US
style='color:windowtext'> String </span><span style='font-family:楷体_GB2312;
color:windowtext'>存放数值。</span></p>

<p class=a0 style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='font-family:Wingdings;color:windowtext'>l&nbsp; </span><span
style='font-family:楷体_GB2312;color:windowtext'>互操作：如果与不是为</span><span
lang=EN-US style='color:windowtext'> .NET Framework </span><span
style='font-family:楷体_GB2312;color:windowtext'>编写的组件（如</span><span lang=EN-US
style='color:windowtext'> Automation </span><span style='font-family:楷体_GB2312;
color:windowtext'>或</span><span lang=EN-US style='color:windowtext'> COM </span><span
style='font-family:楷体_GB2312;color:windowtext'>对象）交互，请记住字符串字符在其它环境中的数据宽度不同（</span><span
lang=EN-US style='color:windowtext'>8 </span><span style='font-family:楷体_GB2312;
color:windowtext'>位）。如果将</span><span lang=EN-US style='color:windowtext'> 8 </span><span
style='font-family:楷体_GB2312;color:windowtext'>位字符的字符串参数传递到这种组件，请在代码中将其声明为</span><span
lang=EN-US style='color:windowtext'> Byte()</span><span style='font-family:
楷体_GB2312;color:windowtext'>（</span><span lang=EN-US style='color:windowtext'>Byte
</span><span style='font-family:楷体_GB2312;color:windowtext'>元素数组）而不是</span><span
lang=EN-US style='color:windowtext'> String</span><span style='font-family:
楷体_GB2312;color:windowtext'>。</span></p>

<p class=2 style='text-indent:20.0pt'>C# <span style='font-family:宋体'>字符串是使用</span>
string <span style='font-family:宋体'>关键字声明的一个字符数组。字符串是使用引号声明的，如下面的示例所示：</span></p>

<p class=a><span lang=EN-US>string s = &quot;Hello, World!&quot;;</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>可以提取子字符串并将字符串连接在一起，如下面的示例所示：</span></p>

<p class=a><span lang=EN-US>string s1 = &quot;orange&quot;;</span></p>

<p class=a><span lang=EN-US>string s2 = &quot;red&quot;;</span></p>

<p class=a><span lang=EN-US>s1 += s2;</span></p>

<p class=a><span lang=EN-US>System.Console.WriteLine(s1);&nbsp; // </span><span
style='font-family:宋体'>输出：</span><span lang=EN-US>orangered</span></p>

<p class=a><span lang=EN-US>s1 = s1.Substring(2, 5);</span></p>

<p class=a><span lang=EN-US>System.Console.WriteLine(s1);&nbsp; // </span><span
style='font-family:宋体'>输出：</span><span lang=EN-US>anger</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串对象是不可变的</span><span
style='font-family:宋体'>：</span><span style='font-family:宋体'>即它们创建之后就无法更改。对字符串进行操作的方法实际上返回的是新的字符串对象。在前面的示例中，将</span>
s1 <span style='font-family:宋体'>和</span> s2 <span style='font-family:宋体'>的内容连接起来以构成一个字符串时，包含</span>
<span style='font-family:宋体'>“</span>orange<span style='font-family:宋体'>”和</span>
<span style='font-family:宋体'>“</span>red<span style='font-family:宋体'>”的两个字符串均保持不变。</span>+=
<span style='font-family:宋体'>运算符会创建一个包含组合内容的新字符串。结果是</span> s1 <span
style='font-family:宋体'>现在完全引用不同的字符串。只包含</span> &quot;orange&quot; <span
style='font-family:宋体'>的字符串仍然存在，但连接</span> s1 <span style='font-family:宋体'>后将不再被引用。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>创建字符串引用时要谨慎从事。如果您创建了一个字符串引用，然后“修改”了该字符串，则该引用会继续指向原始对象，而不是修改字符串时创建的新对象。下面的代码阐释了这个危险：</span></p>

<p class=a><span lang=EN-US>string s1 = &quot;Hello&quot;;</span></p>

<p class=a><span lang=EN-US>string s2 = s1;</span></p>

<p class=a><span lang=EN-US>s1 += &quot; and goodbye.&quot;;</span></p>

<p class=a><span lang=EN-US>Console.WriteLine(s2); //outputs &quot;Hello&quot;</span></p>

<h3><a name="_Toc240797284"></a><a name="_Toc239221211"></a><span lang=EN-US>5.1.2</span><span lang=EN-US> &nbsp;</span><span style='font-family:黑体'>字符串基本操作</span></h3>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本节介绍对字符串的一些基本操作处理，这些操作是编程过程中经常用到的。处理字符串的各种方法基本都包含在</span>System.String
<span style='font-family:宋体'>和</span> System.Text.StringBuilder <span
style='font-family:宋体'>类中。这些方法帮助我们执行许多基本字符串操作，如从字节数组创建新字符串，比较字符串的值和修改现有的字符串。具体包括：</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span style='font-family:Wingdings'>n </span><span
style='font-family:宋体'>转义处理。解决字符串中的特殊字符问题。</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span style='font-family:Wingdings'>n </span><span
style='font-family:宋体'>创建新字符串。将对象转换为字符串和合并字符串的基本方法。</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span style='font-family:Wingdings'>n </span><span
style='font-family:宋体'>剪裁和移除字符。如何剪裁或移除字符串中的字符。</span> </p>

<p class=MsoNormal style='text-indent:20.0pt'><span style='font-family:Wingdings'>n </span><span
style='font-family:宋体'>填充字符串。如何将字符或空格插入到字符串中。</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span style='font-family:Wingdings'>n </span><span
style='font-family:宋体'>比较字符串。如何比较两个或多个字符串的内容。</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span style='font-family:Wingdings'>n </span><span
style='font-family:宋体'>更改大小写。如何更改字符串中字符的大小写。</span></p>

<p class=2 style='text-indent:20.0pt'>C# <span style='font-family:宋体'>字符串是使用</span>
string <span style='font-family:宋体'>关键字声明的，本质上是生成了一个字符数组。以下各个示例逐一演示了如何进行各种字符串的操作。</span></p>

<h4 style='text-indent:20.0pt'>1. <span style='font-family:楷体_GB2312'>转义符“</span>\<span
style='font-family:楷体_GB2312'>”</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串中可以包含转义符，如“</span>\n<span
style='font-family:宋体'>”（新行）和“</span>\t<span style='font-family:宋体'>”（制表符）。所谓转义，就是把这些特殊字符转换为字符格式，否则将出现代码错误。当转义之后，这些特殊字符可以被</span>C#
<span style='font-family:宋体'>识别，并按照原来的含义输出。比如以下代码：</span></p>

<p class=a><span lang=EN-US>string hello = &quot;Hello\nWorld!&quot;;</span></p>

<p class=a><span lang=EN-US>&nbsp;Console.WriteLine(hello);</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>其中包含了一个回车换行符“</span>n<span
style='font-family:宋体'>”，如果不使用转义符，则</span>C# <span style='font-family:宋体'>把它看做是字符“</span>n<span
style='font-family:宋体'>”，而不是我们希望的回车换行符。所以要使用“</span>\<span style='font-family:
宋体'>”来转义。当输出该字符串的时候，结果是：</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span lang=EN-US>Hello </span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span lang=EN-US>World! </span></p>

<p class=ac style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312'>注意，两个单词之间自动换行，这是“</span>\n<span style='font-family:
楷体_GB2312'>”引发的输出结果。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>如果希望包含反斜杠，则它前面必须还有另一个反斜杠；如果要访问双引号“</span>”<span
style='font-family:宋体'>”，也在双引号前加一个反斜杠。比如下面的字符串</span><span style='font-family:
宋体'>：</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span lang=EN-US>string filePath
= &quot;\\\\My Documents\\&quot;;</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span lang=EN-US>string fileName
= “\”</span><span style='font-family:宋体'>我的文档</span><span lang=EN-US>\””;</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>实际上等同于</span><span
style='font-family:宋体'>：</span></p>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>\\My Documents\ </span></p>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>“</span><span
style='font-family:宋体'>我的文档</span><span lang=EN-US>”</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意</span><span style='font-family:
楷体_GB2312;color:windowtext'>：</span><span style='font-family:楷体_GB2312;
color:windowtext'>对于中文字符无需转义</span><span style='font-family:楷体_GB2312;
color:windowtext'>，</span><span style='font-family:楷体_GB2312;color:windowtext'>因为在</span><span
lang=EN-US style='color:windowtext'> C# </span><span style='font-family:楷体_GB2312;
color:windowtext'>看来</span><span style='font-family:楷体_GB2312;color:windowtext'>，</span><span
style='font-family:楷体_GB2312;color:windowtext'>中文不是特殊字符。</span></p>

<h4 style='text-indent:20.0pt'>2. <span style='font-family:楷体_GB2312'>“</span>@<span
style='font-family:楷体_GB2312'>”符号</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串前的</span>
@ <span style='font-family:宋体'>符号会告知字符串构造函数忽略转义符和分行符。因此，以下两个字符串是完全相同的：</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:18.0pt;
text-autospace:none'><span lang=EN-US style='font-size:9.0pt;font-family:宋体'>string
p1 = &quot;\\\\My Documents\\My Files\\&quot;;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:18.0pt;
text-autospace:none'><span lang=EN-US style='font-size:9.0pt;font-family:宋体'>string
p2 = @&quot;\\My Documents\My Files\&quot;;</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>3. ToString()</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>这是大多数数据都支持的一个方法，可以把数据转化为字符串。经常用于将值转换为字符串。此方法可用于将数值转换为字符串，如下所示：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int
year = 1999;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
msg = &quot;</span><span style='font-family:宋体;color:windowtext'>出生年份：</span><span
lang=EN-US style='color:windowtext'> &quot; + year.ToString();</span></p>

<h4 style='text-indent:20.0pt'><a name="_Toc226946144"></a><a
name="_Toc214175925"></a><a name="_Toc214171615"></a><a name="_Toc213416997"></a><a
name="_Toc213213225"><span lang=EN-US>4. </span></a><span style='font-family:
楷体_GB2312'>访问各个字符</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>既然字符串是字符构成的，那么，字符串中所包含的各个字符可以使用方法函数进行访问。</span>C#
<span style='font-family:宋体'>提供了多个字符串访问的方法，可以对字符进行反访问。如</span><span
style='font-family:宋体'>：</span><span lang=EN-US>SubString()</span><span
style='font-family:宋体'>、</span><span lang=EN-US>Replace(),</span><span
style='font-family:宋体'>、</span><span lang=EN-US>Split() </span><span
style='font-family:宋体'>和</span><span lang=EN-US> Trim()</span><span
style='font-family:宋体'>。例如</span><span style='font-family:宋体'>：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
s3 = &quot;Visual C# .NET&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>System.Console.WriteLine(s3.Substring(7,
2));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // </span><span
style='font-family:宋体;color:windowtext'>截取：输出</span><span lang=EN-US
style='color:windowtext'> &quot;C#&quot;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>System.Console.WriteLine(s3.Replace(&quot;C#&quot;,
&quot;Basic&quot;));&nbsp; // </span><span style='font-family:宋体;color:windowtext'>替换：输出</span><span
lang=EN-US style='color:windowtext'> &quot;Visual Basic .NET&quot;</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>也可以将字符复制到字符数组。如下所示</span><span
style='font-family:宋体'>：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
s4 = &quot;Hello, World&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>char[]
arr = s4.ToCharArray(0, s4.Length);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>//</span><span
style='font-family:宋体;color:windowtext'>循环访问每个字符</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>foreach
(char c in arr)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
System.Console.Write(c);&nbsp; // </span><span style='font-family:宋体;
color:windowtext'>输出：</span><span lang=EN-US style='color:windowtext'>&quot;Hello,
World&quot;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意：把字符串复制到字符数组，实际上实现了对字符串的“拆分”，拆分成单个字符，这种用法也是编程中常见的。</span></p>

<h4 style='text-indent:20.0pt'><a name="_Toc226946145"></a><a
name="_Toc214175926"></a><a name="_Toc214171616"></a><a name="_Toc213416998"></a><a
name="_Toc213213226"><span lang=EN-US>5. </span></a><span style='font-family:
楷体_GB2312'>更改大小写</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>若要将字符串中的字母更改为大写或小写，可以使用</span>ToUpper()
<span style='font-family:宋体'>或</span> ToLower()<span style='font-family:宋体'>（不过，这对于中文和数字没有意义，因为中文不分大小写）。如下所示：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
s6 = &quot;aBc&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>System.Console.WriteLine(s6.ToUpper());&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>输出：</span><span
lang=EN-US style='color:windowtext'> &quot;ABC&quot;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>System.Console.WriteLine(s6.ToLower());&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>输出：</span><span
lang=EN-US style='color:windowtext'> &quot;abc&quot;</span></p>

<h4 style='text-indent:20.0pt'><a name="_Toc226946146"></a><a
name="_Toc214175927"></a><a name="_Toc214171617"></a><a name="_Toc213416999"></a><a
name="_Toc213213227"><span lang=EN-US>6. </span></a><span style='font-family:
楷体_GB2312'>比较</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>类似数值之间比较一样，字符串也可以进行比较。比较两个字符串的最简单方法是使用“</span>==<span
style='font-family:宋体'>”和“</span>!=<span style='font-family:宋体'>”运算符，但这种比较是区分大小写的比较，也就是“</span>A<span
style='font-family:宋体'>”不等于“</span>a<span style='font-family:宋体'>”。另外，中文比较按照全角方式比较。以下代码示例判断两个字符串是否相等。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
color1 = &quot;</span><span style='font-family:宋体;color:windowtext'>红</span><span
lang=EN-US style='color:windowtext'>&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
color2 = &quot;</span><span style='font-family:宋体;color:windowtext'>绿</span><span
lang=EN-US style='color:windowtext'>&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
color3 = &quot;</span><span style='font-family:宋体;color:windowtext'>红</span><span
lang=EN-US style='color:windowtext'>&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>if
(color1 == color3)//</span><span style='font-family:宋体;color:windowtext'>判断是否相等</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
System.Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>相等</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>if
(color1 != color2)//</span><span style='font-family:宋体;color:windowtext'>判断是否不等</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
System.Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>不等</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>除了使用逻辑运算操作来比较字符串之外</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>字符串对象也有一个</span><span
lang=EN-US> CompareTo() </span><span style='font-family:宋体'>方法</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>它根据某个字符串是否小于</span><span
lang=EN-US> (&lt;) </span><span style='font-family:宋体'>或大于</span><span
lang=EN-US> (&gt;) </span><span style='font-family:宋体'>另一个</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>返回一个整数值。比较字符串时使用</span>
Unicode <span style='font-family:宋体'>值，小写的值小于大写的值。下面的代码使用</span>CompareTo<span
style='font-family:宋体'>方法来比较两个字符串：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
s7 = &quot;ABC&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
s8 = &quot;abc&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>if
(s7.CompareTo(s8) &gt; 0)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
System.Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>大于</span><span
lang=EN-US style='color:windowtext'>&quot;);//s7</span><span style='font-family:
宋体;color:windowtext'>大于</span><span lang=EN-US style='color:windowtext'>s8</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>else</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
System.Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>小于</span><span
lang=EN-US style='color:windowtext'>&quot;);//s7</span><span style='font-family:
宋体;color:windowtext'>小于</span><span lang=EN-US style='color:windowtext'>s8</span><span
style='font-family:宋体;color:windowtext'>，本行不会输出，因为</span><span lang=EN-US
style='color:windowtext'>s7</span><span style='font-family:宋体;color:windowtext'>大于</span><span
lang=EN-US style='color:windowtext'>s8</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>7. </span><span
style='font-family:楷体_GB2312'>检索</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>另外一种常用的字符串操作是在一个字符串中查找另外一个</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>若要在一个字符串中搜索另一个字符串</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>可以使用</span><span
lang=EN-US> IndexOf()</span><span style='font-family:宋体'>。如果未找到搜索字符串，</span>IndexOf()
<span style='font-family:宋体'>返回</span> -1<span style='font-family:宋体'>；否则，返回它出现的第一个位置的索引（从零开始）。那么，只要判断</span>IndexOf()<span
style='font-family:宋体'>返回的值是否是</span>-1<span style='font-family:宋体'>即可知道是否找到这个字符串。下面的代码搜索“大家好”是否在一个字符串中：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
s9 = &quot;</span><span style='font-family:宋体;color:windowtext'>大家好，我是</span><span
lang=EN-US style='color:windowtext'> C#</span><span style='font-family:宋体;
color:windowtext'>。</span><span lang=EN-US style='color:windowtext'>&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>System.Console.WriteLine(s9.IndexOf(&quot;</span><span
style='font-family:宋体;color:windowtext'>大家好</span><span lang=EN-US
style='color:windowtext'>&quot;));&nbsp; // </span><span style='font-family:
宋体;color:windowtext'>输出</span><span style='color:windowtext'> <span lang=EN-US>0</span></span><span
style='font-family:宋体;color:windowtext'>，因为“大家好”在开始位置</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>System.Console.WriteLine(s9.IndexOf(&quot;Basic&quot;));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>输出</span><span
lang=EN-US style='color:windowtext'> -1</span></p>

<h4 style='text-indent:20.0pt'><a name="_Toc226946147"></a><a
name="_Toc214175928"></a><a name="_Toc214171618"></a><a name="_Toc213417000"></a><a
name="_Toc213213228"><span lang=EN-US>8. </span></a><span style='font-family:
楷体_GB2312'>拆分</span><span style='font-family:楷体_GB2312'>字符串</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>将字符串拆分为子字符串（如将句子拆分为各个单词）是一个常见的编程任务。</span>Split()
<span style='font-family:宋体'>方法使用指定的分隔符（如空格字符）</span>char <span
style='font-family:宋体'>数组，并返回一个子字符串数组。我们可以使用</span> foreach <span
style='font-family:宋体'>访问此数组，下面的代码首先定义一个分隔符为空格“</span>’ ‘<span
style='font-family:宋体'>”的字符数组，只有一个数组元素，就是空格，使用单引号引起来，然后通过循环操作，把字符串按照空格拆分出不同的单词：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>char[]
delimit = new char[] { ' ' };//</span><span style='font-family:宋体;color:windowtext'>定义分隔符</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>string
s10 = &quot;The cat sat on the mat.&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>//Split</span><span
style='font-family:宋体;color:windowtext'>把字符串按照分隔符空格分割成多个字符串数组</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>foreach
(string substr in s10.Split(delimit))//</span><span style='font-family:宋体;
color:windowtext'>循环遍历数组中的每个单词</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
System.Console.WriteLine(substr);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>此代码将在单独的行上输出每个单词</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>如图</span><span
lang=EN-US>5-1</span><span style='font-family:宋体'>所示</span><span
style='font-family:宋体'>：</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img width=225
height=113 src="5.files/image001.jpg"></span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:20.0pt;
text-autospace:none'><span style='font-family:宋体'>图</span><span lang=EN-US>5-1</span><span
style='font-family:宋体'>拆分字符串</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意：可以直接使用</span><span
lang=EN-US style='color:windowtext'> s10.Split(' ')</span><span
style='font-family:楷体_GB2312;color:windowtext'>来拆分字符串</span><span lang=EN-US
style='color:windowtext'>s10</span><span style='font-family:楷体_GB2312;
color:windowtext'>，然后通过数组索引获取值。比如：</span><span lang=EN-US style='color:windowtext'>s10.Split(‘
‘)[0]</span><span style='font-family:楷体_GB2312;color:windowtext'>将获取字符串“</span><span
lang=EN-US style='color:windowtext'>The</span><span style='font-family:楷体_GB2312;
color:windowtext'>”。当不需要全部输出字符串拆分结果的时候，可以使用这种方法指定具体要获取哪个子字符串。</span></p>

<h3><a name="_Toc240797285"></a><a name="_Toc239221212"></a><span lang=EN-US>5.1.3</span><span lang=EN-US> &nbsp;</span><span style='font-family:黑体'>格式化字符串</span></h3>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>String</span><span
style='font-family:宋体'>还支持按照一定格式来输出字符串</span><span style='font-family:宋体'>，</span><span
style='font-family:宋体'>只要指定字符串的格式属性即可</span><span style='font-family:宋体'>，</span><span
style='font-family:宋体'>语法是</span><span style='font-family:宋体'>：</span><span
lang=EN-US>String.format=</span><span style='font-family:宋体'>“</span><span
style='font-family:宋体'>格式</span><span style='font-family:宋体'>”</span><span
style='font-family:宋体'>。</span>format <span style='font-family:宋体'>的含义是：</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>format </span><span
style='font-family:宋体'>参数由零个或多个文本序列与零个或多个索引占位符混合组成，其中索引占位符称为格式项，它们与此方法的参数列表中的对象相对应。格式设置过程将每个格式项替换为相应对象值的文本表示形式。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span style='font-family:
宋体'>格式项的语法是</span><span lang=EN-US> {</span><span style='font-family:宋体'>索引</span><span
lang=EN-US>[,</span><span style='font-family:宋体'>对齐方式</span><span lang=EN-US>][:</span><span
style='font-family:宋体'>格式字符串</span><span lang=EN-US>]}</span><span
style='font-family:宋体'>，它指定了一个强制索引、格式化文本的可选长度和对齐方式，以及格式说明符字符的可选字符串，其中格式说明符字符用于控制如何设置相应对象的值的格式。</span></p>

<p class=MsoNormal style='margin-left:21.0pt;text-indent:0cm'><span
style='font-family:宋体'>格式项的组成部分包括：</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span style='font-family:
宋体'>索引。从零开始的整数，指示对象列表中要格式化的元素。如果由索引指定的对象为</span><span lang=EN-US>
nullNothingnullptrnull </span><span style='font-family:宋体'>引用，则格式项将被空字符串</span><span
lang=EN-US> (&quot;&quot;) </span><span style='font-family:宋体'>替换。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span style='font-family:
宋体'>对齐方式。可选整数，指示包含格式化值的区域的最小宽度。如果格式化值的长度小于对齐方式，则用空格填充该区域。如果对齐方式为负，则格式化值将在该区域中左对齐；如果对齐方式为正，则格式化值将右对齐。如果没有指定对齐方式，则该区域的长度为格式化值的长度。如果指定对齐方式，则需要使用逗号。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span style='font-family:
宋体'>格式字符串。可选的格式说明符字符串。如果指定格式字符串，则需要使用冒号。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>必须使用前导大括号字符和尾部大括号字符，即</span>“{”<span
style='font-family:宋体'>和</span>“}”<span style='font-family:宋体'>。若要在</span>
format <span style='font-family:宋体'>中指定单个大括号字符，请指定两个前导大括号字符或尾部大括号字符；即</span>“{{”<span
style='font-family:宋体'>或</span>“}}”<span style='font-family:宋体'>。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>5-1-1<span style='font-family:宋体'>】以下代码演示了常用的各种字符串格式以及它们的输出。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>（代码位置：光盘</span>\<span
style='font-family:宋体'>源代码</span>\chapter5\stringformat<span style='font-family:
宋体'>）</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>class
stringformat</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
static DateTime thisDate = DateTime.Now;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
public static void Main()</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>保存字符串格式</span><span
lang=EN-US style='color:windowtext'> String.Format </span><span
style='font-family:宋体;color:windowtext'>信息，系统提供了这些格式标准</span><span lang=EN-US
style='color:windowtext'>.</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string s = &quot;&quot;;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.Clear();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>根据格式输出浮点数和整数</span><span
lang=EN-US style='color:windowtext'>,0 </span><span style='font-family:宋体;
color:windowtext'>索引代表第一个参数</span><span lang=EN-US style='color:windowtext'>
-123</span><span style='font-family:宋体;color:windowtext'>，</span><span
lang=EN-US style='color:windowtext'>1</span><span style='font-family:宋体;
color:windowtext'>索引代表第二个参数</span><span lang=EN-US style='color:windowtext'> -123.45f.</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>标准数值格式：</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
s = String.Format(</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(C) </span><span style='font-family:宋体;color:windowtext'>货币</span><span
lang=EN-US style='color:windowtext'>: . . . . . . . . . . {0:C}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(D) </span><span style='font-family:宋体;color:windowtext'>十进制</span><span
lang=EN-US style='color:windowtext'>:.. . . . . . . . . {0:D}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(E) </span><span style='font-family:宋体;color:windowtext'>科学记数</span><span
lang=EN-US style='color:windowtext'>: . . . . . . . {1:E}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(F) </span><span style='font-family:宋体;color:windowtext'>固定小数</span><span
lang=EN-US style='color:windowtext'>:. . . . . . . {1:F}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(G) </span><span style='font-family:宋体;color:windowtext'>通用</span><span
lang=EN-US style='color:windowtext'>:. . . . . . . . . {0:G}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;&nbsp;&nbsp;&nbsp; (</span><span style='font-family:宋体;color:windowtext'>默认</span><span
lang=EN-US style='color:windowtext'>):. . . . . . . . {0} (default =
'G')\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(N) </span><span style='font-family:宋体;color:windowtext'>数字</span><span
lang=EN-US style='color:windowtext'>: . . . . . . . . . {0:N}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(P) </span><span style='font-family:宋体;color:windowtext'>百分数</span><span
lang=EN-US style='color:windowtext'>:. . . . . . . . . {1:P}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(R) </span><span style='font-family:宋体;color:windowtext'>数值</span><span
lang=EN-US style='color:windowtext'>: . . . . . . . {1:R}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(X) </span><span style='font-family:宋体;color:windowtext'>十六进制</span><span
lang=EN-US style='color:windowtext'>:. . . . . . . {0:X}\n&quot;,</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-123, -123.45f);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(s);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// </span><span style='font-family:宋体;color:windowtext'>日期格式设置</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;</span><span style='font-family:宋体;color:windowtext'>标准日期时间格式：</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
s = String.Format(</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(d) </span><span style='font-family:宋体;color:windowtext'>短日期</span><span
lang=EN-US style='color:windowtext'>: . . . . . . . {0:d}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(D) </span><span style='font-family:宋体;color:windowtext'>长日期</span><span
lang=EN-US style='color:windowtext'>:. . . . . . . . {0:D}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(t) </span><span style='font-family:宋体;color:windowtext'>短时间</span><span
lang=EN-US style='color:windowtext'>: . . . . . . . {0:t}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(T) </span><span style='font-family:宋体;color:windowtext'>长时间</span><span
lang=EN-US style='color:windowtext'>:. . . . . . . . {0:T}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(f) </span><span style='font-family:宋体;color:windowtext'>日期和时间</span><span
lang=EN-US style='color:windowtext'>: . . {0:f}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(F) </span><span style='font-family:宋体;color:windowtext'>日期和长时间</span><span
lang=EN-US style='color:windowtext'>:. . . {0:F}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(g) </span><span style='font-family:宋体;color:windowtext'>默认和短时间</span><span
lang=EN-US style='color:windowtext'>:. {0:g}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(G) </span><span style='font-family:宋体;color:windowtext'>默认和长时间</span><span
lang=EN-US style='color:windowtext'>: . {0:G}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;&nbsp;&nbsp;&nbsp; (</span><span style='font-family:宋体;color:windowtext'>默认</span><span
lang=EN-US style='color:windowtext'>):. . . . . . . . {0} (</span><span
style='font-family:宋体;color:windowtext'>默认</span><span lang=EN-US
style='color:windowtext'> = 'G')\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(M) </span><span style='font-family:宋体;color:windowtext'>月份</span><span
lang=EN-US style='color:windowtext'>:. . . . . . . . . . {0:M}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(R) RFC1123:. . . . . . . . . {0:R}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(s) </span><span style='font-family:宋体;color:windowtext'>顺序</span><span
lang=EN-US style='color:windowtext'>: . . . . . . . . {0:s}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(u) </span><span style='font-family:宋体;color:windowtext'>全球顺序</span><span
lang=EN-US style='color:windowtext'>: . . . {0:u} (invariant)\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;(U) </span><span style='font-family:宋体;color:windowtext'>全球日期时间</span><span
lang=EN-US style='color:windowtext'>: {0:U}\n&quot; +</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&quot;(Y) </span><span style='font-family:宋体;
color:windowtext'>年</span><span lang=EN-US style='color:windowtext'>: . . . . .
. . . . . {0:Y}\n&quot;,</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
thisDate);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(s);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span><span
lang=EN-US>5-1</span><span style='font-family:宋体'>所示。</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img width=283
height=213 src="5.files/image002.jpg"></span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><span
style='font-family:宋体'>图</span><span lang=EN-US>5-1 </span><span
style='font-family:宋体'>输出格式化结果</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>另外一种常用的格式设置是对日期时间的格式化输出。期和时间值的字符串表示形式通常会因区域性而异。例如，</span>d
<span style='font-family:宋体'>标准格式字符串指示应使用短日期模式显示日期和时间值。对于固定区域性，此模式为“</span>MM/dd/yyyy<span
style='font-family:宋体'>”。对于</span> fr-FR <span style='font-family:宋体'>区域性，此模式为“</span>dd/MM/yyyy<span
style='font-family:宋体'>”。对于</span> ja-JP <span style='font-family:宋体'>区域性，此模式为“</span>yyyy/MM/dd<span
style='font-family:宋体'>”。下面的代码利用</span> ToString <span style='font-family:宋体'>的</span>format<span
style='font-family:宋体'>参数来设置格式，相当于设置了字符串的</span> format <span style='font-family:
宋体'>属性：</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>DateTime
date1 = DateTime.Now;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(date1.ToString
(&quot;yyyy/MM/dd&quot;));</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出是：</span>2009-4-20</p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>该代码把当前日期转化成字符串，并按照格式“</span>yyy/MM/dd<span
style='font-family:宋体'>”输出，注意“</span>MM<span style='font-family:宋体'>”要大写。</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>说明：日期格式输出有许多种方法，这是自定义输出形式，请参考</span><span
lang=EN-US style='color:windowtext'> VS.NET </span><span style='font-family:
楷体_GB2312;color:windowtext'>的帮助文档，将提供更多的系统个支持的格式设置方式的信息。</span></p>

<h2><a name="_Toc240797286"></a><a name="_Toc239221213"></a><a
name="_Toc226946148"></a><a name="_Toc214175929"></a><a name="_Toc214171619"></a><a
name="_Toc213417001"></a><a name="_Toc213213229"><span lang=EN-US>5.2 &nbsp;</span></a><span
style='font-family:黑体'>使用</span><span lang=EN-US> StringBuilder</span></h2>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>字符串处理过程是要大量占用内存资源和系统运算时间的过程，</span>C#
<span style='font-family:宋体'>提供了一种更加高效的方式，处理有关字符串的操作。在具体编码中，通常采用</span>
StringBuilder<span style='font-family:宋体'>类来处理大量的连接或其他涉及字符串的操作。</span>StringBuilder
<span style='font-family:宋体'>类创建了一个字符串缓冲区，用于在程序执行大量字符串操作时提供更好的性能。</span>StringBuilder
<span style='font-family:宋体'>字符串还允许重新分配特殊字符，就是那些内置字符串数据类型所不支持的字符。</span></p>

<h3><a name="_Toc240797287"></a><a name="_Toc239221214"></a>5.2.1 &nbsp;<span style='font-family:黑体'>构造字符串</span></h3>

<p class=2 style='text-indent:20.0pt'>StringBuilder <span style='font-family:
宋体'>可以创建新的字符串，但不是通常的定义变量并赋值的方式，而是可以通过使用它提供的</span> Append <span
style='font-family:宋体'>方法，根据需要添加的方式。</span>Append <span style='font-family:
宋体'>方法的使用方式是：</span></p>

<p class=2 style='text-indent:20.0pt'>Append(string)</p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>在当前字符串末尾追加新的字符串。比如下面的代码可以把多个字符串联接起来。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>5-2-1<span style='font-family:宋体'>】联接字符串。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>（代码位置：光盘</span>\<span
style='font-family:宋体'>源代码</span>\chapter5\stringbuilder<span style='font-family:
宋体'>）</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using System;</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using System.Text;</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; namespace
stringbuilder</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
class Program</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
static void Main(string[] args)</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span
style='font-family:宋体;color:windowtext'>新建</span><span lang=EN-US
style='color:windowtext'> StringBuilder</span><span style='font-family:宋体;
color:windowtext'>实例</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>10.&nbsp;&nbsp;&nbsp; StringBuilder sb = new
StringBuilder();</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>11.&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
sb.Append(&quot;</span><span style='font-family:宋体;color:windowtext'>张三</span><span
lang=EN-US style='color:windowtext'> &quot;);</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>12.&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sb.Append(&quot;</span><span
style='font-family:宋体;color:windowtext'>李四</span><span lang=EN-US
style='color:windowtext'> &quot;);</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>13.&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
sb.Append(&quot;</span><span style='font-family:宋体;color:windowtext'>王五</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>14.&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string str = sb.ToString();//</span><span style='font-family:宋体;color:windowtext'>转化为字符串并赋值给</span><span
lang=EN-US style='color:windowtext'>str</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>15.&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(str);</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>16.&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>17.&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>18.&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }</span></p>

<p class=a style='margin-left:42.0pt;text-indent:-21.0pt'><span lang=EN-US
style='color:windowtext'>19.&nbsp;&nbsp;&nbsp; }</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>5-2<span
style='font-family:宋体'>所示：</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img width=152
height=62 src="5.files/image003.jpg"></span></p>

<p class=a2><span style='font-family:宋体'>图</span><span lang=EN-US>5-2 </span><span
style='font-family:宋体'>输出结果</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>虽然</span>
StringBuilder <span style='font-family:宋体'>对象是动态构建字符串的，允许扩充它所封装的字符串中字符的数量，但是可以为它可容纳的最大字符数指定一个限定值，此值称为该对象的容量，不应将它与当前</span>
StringBuilder <span style='font-family:宋体'>对象容纳的字符串长度混淆在一起。例如，可以创建</span>
StringBuilder <span style='font-family:宋体'>类的带有字符串</span>“Hello”<span
style='font-family:宋体'>（长度为</span> 5<span style='font-family:宋体'>）的一个新实例，同时可以指定该对象的最大容量为</span>
25<span style='font-family:宋体'>。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>当修改</span>
StringBuilder <span style='font-family:宋体'>时，在达到容量之前，它不会为其自己重新分配空间。当达到容量时，将自动分配新的空间且容量翻倍。可以使用重载的构造函数之一来指定</span>
StringBuilder <span style='font-family:宋体'>类的容量。下面的示例指定可以将</span>
MyStringBuilder <span style='font-family:宋体'>对象扩充到最大</span> 25 <span
style='font-family:宋体'>个空白。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>StringBuilder
MyStringBuilder = new StringBuilder(&quot;Hello World!&quot;, 25);&nbsp; </span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>另外</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>可以使用读</span><span
lang=EN-US>/</span><span style='font-family:宋体'>写</span><span lang=EN-US>
Capacity </span><span style='font-family:宋体'>属性来设置对象的最大长度。下面的示例使用</span><span
lang=EN-US> Capacity </span><span style='font-family:宋体'>属性来定义对象的最大长度。比如</span><span
style='font-family:宋体'>：</span></p>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>MyStringBuilder.Capacity
= 25;</span></p>

<h3><a name="_Toc240797288"></a><a name="_Toc239221215"></a><span lang=EN-US>5.2.2</span><span lang=EN-US> &nbsp;StringBuilder </span><span
style='font-family:黑体'>常用方法</span></h3>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>StringBuilder </span><span
style='font-family:宋体'>提供了许多方法函数来操作字符串</span><span style='font-family:宋体'>，</span><span
style='font-family:宋体'>本节介绍几个经常使用的方法。表</span><span lang=EN-US>5-1</span><span
style='font-family:宋体'>中列出了可以用来修改</span><span lang=EN-US> StringBuilder </span><span
style='font-family:宋体'>的内容的几种方法。</span></p>

<p class=a8 style='text-indent:20.0pt'><span style='font-family:黑体'>表</span><span
lang=EN-US>5-1 </span><span style='font-family:黑体'>修改内容的方法</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width="98%"
 style='width:98.9%;border-collapse:collapse;border:none'>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>方法名</span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>说明</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Append </span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>将新内容追加到当前</span><span
  lang=EN-US> StringBuilder </span><span style='font-family:宋体'>的结尾。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>AppendFormat </span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>用带格式文本替换字符串中传递的格式说明符。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Insert </span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>将字符串或对象插入到当前</span><span
  lang=EN-US> StringBuilder </span><span style='font-family:宋体'>对象的指定索引处。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Remove </span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>从当前</span><span
  lang=EN-US> StringBuilder </span><span style='font-family:宋体'>对象中移除指定数量的字符。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span lang=EN-US>Replace </span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:18.0pt'><span style='font-family:宋体'>替换指定索引处的指定字符。</span></p>
  </td>
 </tr>
</table>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>下面分别说明各种方法的使用方式，并给出相应的代码示例。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>1. Append</span></h4>

<p class=2 style='text-indent:20.0pt'>Append <span style='font-family:宋体'>方法可用来将文本或对象的字符串表示形式添加到由当前</span>
StringBuilder <span style='font-family:宋体'>对象表示的字符串的结尾处。下面的示例将一个</span>
StringBuilder <span style='font-family:宋体'>对象初始化为</span>“<span
style='font-family:宋体'>你好！</span>”<span style='font-family:宋体'>，然后将一些文本追加到该对象的结尾处。将根据需要自动分配空间。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>StringBuilder
MyStringBuilder = new StringBuilder(&quot;</span><span style='font-family:宋体;
color:windowtext'>你好</span><span lang=EN-US style='color:windowtext'>!&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>MyStringBuilder.Append(&quot;
</span><span style='font-family:宋体;color:windowtext'>很高兴认识你</span><span
lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(MyStringBuilder);</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>5-3<span
style='font-family:宋体'>所示：</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img width=195
height=59 src="5.files/image004.jpg"></span></p>

<p class=a2><span style='font-family:宋体'>图</span><span lang=EN-US>5-3 </span><span
style='font-family:宋体'>输出结果</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>2. AppendFormat</span></h4>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>AppendFormat </span><span
style='font-family:宋体'>方法将文本添加到</span><span lang=EN-US> StringBuilder </span><span
style='font-family:宋体'>的末尾</span><span style='font-family:宋体'>，</span><span
style='font-family:宋体'>而且可以使用系统提供格的标准格式字符串</span><span style='font-family:宋体'>（</span><span
style='font-family:宋体'>见格式化字符串部分</span><span style='font-family:宋体'>）</span><span
style='font-family:宋体'>。可以使用此方法来自定义变量的格式并将这些值追加到</span> StringBuilder <span
style='font-family:宋体'>的后面。下面的示例使用</span> AppendFormat <span style='font-family:
宋体'>方法，将一个设置为货币值格式的整数值放到</span> StringBuilder <span style='font-family:宋体'>的末尾。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>int
MyInt = 25; </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>StringBuilder
MyStringBuilder = new StringBuilder(&quot;</span><span style='font-family:宋体;
color:windowtext'>总计：</span><span lang=EN-US style='color:windowtext'> &quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>MyStringBuilder.AppendFormat(&quot;{0:C}
&quot;, MyInt);//</span><span style='font-family:宋体;color:windowtext'>设置格式</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(MyStringBuilder);</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>5-4<span
style='font-family:宋体'>所示：</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img width=156
height=63 src="5.files/image005.jpg"></span></p>

<p class=a2><span style='font-family:宋体'>图</span><span lang=EN-US>5-3 </span><span
style='font-family:宋体'>输出结果</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果中有一个人民币符号，这是格式化中自动根据当前系统设置的区域（控制面板中的设置）来设定的货币符号。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>3. Insert</span></h4>

<p class=2 style='text-indent:20.0pt'>Insert <span style='font-family:宋体'>方法将字符串或对象添加到当前</span>
StringBuilder <span style='font-family:宋体'>中的指定位置。下面的示例使用此方法将一个单词插入到</span>
StringBuilder <span style='font-family:宋体'>的第</span>3<span style='font-family:
宋体'>个位置。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>StringBuilder
MyStringBuilder = new StringBuilder(&quot;</span><span style='font-family:宋体;
color:windowtext'>你好</span><span lang=EN-US style='color:windowtext'>!&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>MyStringBuilder.Insert(3,&quot;</span><span
style='font-family:宋体;color:windowtext'>大家好</span><span lang=EN-US
style='color:windowtext'> &quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(MyStringBuilder);</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>5-5<span
style='font-family:宋体'>所示：</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意：在字符串中使用了中文，而中文的一个汉字属于一个字符，所以应该指定插入的索引位置是</span><span
lang=EN-US style='color:windowtext'>3</span><span style='font-family:楷体_GB2312;
color:windowtext'>。如果索引位置不正确，则会出现系统错误或者无法正确插入的结果。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>4. Remove</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>与</span><span
lang=EN-US>Insert</span><span style='font-family:宋体'>和</span><span lang=EN-US>Append</span><span
style='font-family:宋体'>相反</span><span style='font-family:宋体'>，</span><span
style='font-family:宋体'>可以使用</span><span lang=EN-US> Remove </span><span
style='font-family:宋体'>方法从当前</span><span lang=EN-US> StringBuilder </span><span
style='font-family:宋体'>中移除指定数量的字符</span><span style='font-family:宋体'>，</span><span
style='font-family:宋体'>移除过程从指定的从零开始的索引处开始。下面的示例使用</span> Remove <span
style='font-family:宋体'>方法缩短</span> StringBuilder<span style='font-family:宋体'>，删除“大家好”，即从第</span>3<span
style='font-family:宋体'>个位置开始删除</span>3<span style='font-family:宋体'>个字符。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>StringBuilder
MyStringBuilder = new StringBuilder(&quot;</span><span style='font-family:宋体;
color:windowtext'>你好，大家好</span><span lang=EN-US style='color:windowtext'>!&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>MyStringBuilder.Remove(3,3);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(MyStringBuilder);</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>5-6<span
style='font-family:宋体'>所示：</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img width=140
height=70 src="5.files/image006.jpg">&nbsp;&nbsp;&nbsp;&nbsp; <img width=234
height=75 src="5.files/image007.jpg"></span></p>

<p class=a2><span style='font-family:宋体'>图</span><span lang=EN-US>5-5 </span><span
style='font-family:宋体'>输出结果</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-family:宋体'>图</span><span lang=EN-US>5-6 </span><span
style='font-family:宋体'>输出结果</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意：字符索引是从</span><span
lang=EN-US style='color:windowtext'>0</span><span style='font-family:楷体_GB2312;
color:windowtext'>开始的，所以“你好，”正好占据了</span><span lang=EN-US style='color:windowtext'>0-2</span><span
style='font-family:楷体_GB2312;color:windowtext'>的字符位置，我们删除的时候，是从索引</span><span
lang=EN-US style='color:windowtext'>3</span><span style='font-family:楷体_GB2312;
color:windowtext'>开始的，实际上就是第</span><span lang=EN-US style='color:windowtext'>4</span><span
style='font-family:楷体_GB2312;color:windowtext'>个字符开始的。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>5. Replace</span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>使用</span><span
lang=EN-US> Replace </span><span style='font-family:宋体'>方法</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>可以用另一个指定的字符来替换</span><span
lang=EN-US> StringBuilder </span><span style='font-family:宋体'>对象内的字符。下面的示例使用</span>
Replace <span style='font-family:宋体'>方法来搜索</span> StringBuilder <span
style='font-family:宋体'>对象，查找所有的字符“苦”，并用“乐”字符来替换它们。</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>StringBuilder
MyStringBuilder = new StringBuilder(&quot;</span><span style='font-family:宋体;
color:windowtext'>以苦为乐，以苦为志，以苦为励</span><span lang=EN-US style='color:windowtext'>&quot;);</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>MyStringBuilder.Replace('</span><span
style='font-family:宋体;color:windowtext'>苦</span><span lang=EN-US
style='color:windowtext'>', '</span><span style='font-family:宋体;color:windowtext'>乐</span><span
lang=EN-US style='color:windowtext'>');</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>Console.WriteLine(MyStringBuilder);</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>5-7<span
style='font-family:宋体'>所示：</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img width=163
height=62 src="5.files/image008.jpg"></span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:20.0pt'><span
style='font-family:宋体'>图</span><span lang=EN-US>5-7 </span><span
style='font-family:宋体'>输出结果</span></p>

<p class=a0 style='margin-left:18.0pt;text-indent:-18.0pt'><span
style='font-family:楷体_GB2312;color:windowtext'>注意：中文也被看做字符，因此“苦”和“乐”两边使用了单引号“</span><span
lang=EN-US style='color:windowtext'>’</span><span style='font-family:楷体_GB2312;
color:windowtext'>”来标记为字符，而不是双引号。不过，可以使用个双引号，</span><span lang=EN-US
style='color:windowtext'>Replace </span><span style='font-family:楷体_GB2312;
color:windowtext'>接受字符串参数。</span></p>

<h2><a name="_Toc240797289"></a><a name="_Toc239221216"><span lang=EN-US>5.3&nbsp;
</span></a><span style='font-family:黑体'>使用正则表达式</span></h2>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>我们经常看到的搜索引擎，其实是采用正则表达式（</span>Regular
Expression<span style='font-family:宋体'>）进行关键词搜索，而我们经常遇到的文章检索系统，实际上也是利用正则表达式技术来实现检索功能。不但是</span>C#<span
style='font-family:宋体'>语言中有正则表达式技术，而且大多数语言都支持这种技术。</span></p>

<h3><a name="_Toc240797290"></a><a name="_Toc239221217"></a><span lang=EN-US>5.3.1</span><span lang=EN-US> &nbsp;</span><span style='font-family:黑体'>正则表达式</span></h3>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>正则表达式提供了功能强大、灵活而又高效的方法来处理文本。正则表达式的全面模式匹配表示法使我们可以快速分析大量文本以找到特定的字符模式；提取、编辑、替换或删除文本子字符串；或将提取的字符串添加到集合以生成报告。对于处理字符串（例如</span>
HTML <span style='font-family:宋体'>处理、日志文件分析和</span> HTTP <span
style='font-family:宋体'>标头分析）的许多应用程序而言，正则表达式是不可缺少的工具。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>“正则表达式”通常缩写成“</span>regex<span
style='font-family:宋体'>”，单数有</span>regexp<span style='font-family:宋体'>、</span>regex<span
style='font-family:宋体'>，复数有</span>regexps<span style='font-family:宋体'>、</span>regexes<span
style='font-family:宋体'>、</span>regexen<span style='font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:20.0pt'><span style='font-family:宋体'>在</span>C#<span
style='font-family:宋体'>中，可以使用</span> System.Text.RegularExpressions.Regex <span
style='font-family:宋体'>类搜索字符串。这些搜索可以涵盖从</span><span style='font-family:宋体'>非常简单到全面使用正则表达式的复杂范围。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>正则表达式实际上有一套标准的语言语法定义，最常见的就是“</span>*<span
style='font-family:宋体'>”，表示匹配任意字符，通常这种搜索匹配叫做“模糊查询”。还有更多、更复杂的匹配语法规则，这里就不一一介绍。表</span>5-2<span
style='font-family:宋体'>是常用的正则表达式语法定义。</span></p>

<p class=a8 style='text-indent:20.0pt'><span style='font-family:黑体'>表</span>5-2
<span style='font-family:黑体'>用于查找和替换的正则表达式</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width="98%"
 style='width:98.9%;border-collapse:collapse;border:none'>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>表达式</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>语法</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>说明</span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>示例</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>任一字符</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>.</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配除换行符外的任何一个字符。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>a.o </span><span
  style='font-family:宋体'>匹配</span><span lang=EN-US>“around”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“aro”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“about”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“abo”</span><span
  style='font-family:宋体'>，但不匹配</span><span lang=EN-US>“across”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“acro”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>零个或多个</span><span
  lang=EN-US> </span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>*</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>不匹配上一表达式，或匹配多次，并生成所有可能的匹配。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>a*b </span><span
  style='font-family:宋体'>匹配</span><span lang=EN-US>“bat”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“b”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“about”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“ab”</span><span
  style='font-family:宋体'>。</span></p>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>e.*e </span><span
  style='font-family:宋体'>匹配单词</span><span lang=EN-US>“enterprise”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>一个或更多个</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>+</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配前面表达式的至少一个搜索项。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>ac+ </span><span
  style='font-family:宋体'>匹配包含字母</span><span lang=EN-US>“a”</span><span
  style='font-family:宋体'>和至少一个字母</span><span lang=EN-US>“c”</span><span
  style='font-family:宋体'>的单词，如</span><span lang=EN-US>“race”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“ace”</span><span
  style='font-family:宋体'>。</span></p>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>a.+s </span><span
  style='font-family:宋体'>匹配单词</span><span lang=EN-US>“access”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>行首</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>^</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>将匹配字符串锚定到行首。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>^car </span><span
  style='font-family:宋体'>仅当单词</span><span lang=EN-US>“car”</span><span
  style='font-family:宋体'>显示为编辑器行中的第一组字符时匹配该单词。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>行尾</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>$</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>将匹配字符串锚定到行尾。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>end$ </span><span
  style='font-family:宋体'>仅当单词</span><span lang=EN-US>“end”</span><span
  style='font-family:宋体'>显示为可能位于编辑器中行尾的最后一组字符时匹配该单词。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>词首</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>&lt;&nbsp;</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>仅当单词在文本中以此开头时才匹配。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>&lt;in </span><span
  style='font-family:宋体'>匹配以字母</span><span lang=EN-US>“in”</span><span
  style='font-family:宋体'>开头的单词，如</span><span lang=EN-US>“inside”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“into”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>词尾</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>&gt;&nbsp;</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>仅当单词在文本中以此结尾时才匹配。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>ss&gt; </span><span
  style='font-family:宋体'>匹配以字母</span><span lang=EN-US>“ss”</span><span
  style='font-family:宋体'>结尾的单词，如</span><span lang=EN-US>“across”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“loss”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>换行符</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>\n</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配与操作系统无关的换行符。在</span><span
  lang=EN-US>“</span><span style='font-family:宋体'>替换</span><span lang=EN-US>”</span><span
  style='font-family:宋体'>表达式中，插入换行符。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>End\nBegin </span><span
  style='font-family:宋体'>仅当</span><span lang=EN-US>“End”</span><span
  style='font-family:宋体'>是一行中的最后一个字符串和</span><span lang=EN-US>“Begin”</span><span
  style='font-family:宋体'>是下一行中的第一个字符串时匹配单词</span><span lang=EN-US>“End”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“Begin”</span><span
  style='font-family:宋体'>。</span></p>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>在</span><span
  lang=EN-US>“</span><span style='font-family:宋体'>替换</span><span lang=EN-US>”</span><span
  style='font-family:宋体'>表达式中，</span></p>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>Begin\nEnd </span><span
  style='font-family:宋体'>使用</span><span lang=EN-US>“Begin”</span><span
  style='font-family:宋体'>替换第一行中的单词</span><span lang=EN-US>“End”</span><span
  style='font-family:宋体'>，插入换行符，然后使用单词</span><span lang=EN-US>“End”</span><span
  style='font-family:宋体'>替换单词</span><span lang=EN-US>“Begin”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>集中的任何一个字符</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>[]</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配</span><span
  lang=EN-US> [] </span><span style='font-family:宋体'>内的任何一个字符。若要指定字符的范围，请列出由短划线</span><span
  lang=EN-US> (-) </span><span style='font-family:宋体'>分隔的起始字符和结束字符，如</span><span
  lang=EN-US> [a-z]</span><span style='font-family:宋体'>。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>be[n-t] </span><span
  style='font-family:宋体'>匹配</span><span lang=EN-US>“between”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“bet”</span><span
  style='font-family:宋体'>、</span><span lang=EN-US>“beneath”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“ben”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“beside”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“bes”</span><span
  style='font-family:宋体'>，但不匹配</span><span lang=EN-US>“below”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“bel”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>集中没有的任何一个字符</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>[^...]</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配未在跟随</span><span
  lang=EN-US> ^ </span><span style='font-family:宋体'>的字符集中指定的任何字符。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>be[^n-t] </span><span
  style='font-family:宋体'>匹配</span><span lang=EN-US>“before”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“bef”</span><span
  style='font-family:宋体'>、</span><span lang=EN-US>“behind”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“beh”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“below”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“bel”</span><span
  style='font-family:宋体'>，但是不匹配</span><span lang=EN-US>“beneath”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“ben”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>或</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>|</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配</span><span
  lang=EN-US> OR </span><span style='font-family:宋体'>符号</span><span lang=EN-US>
  (|) </span><span style='font-family:宋体'>之前或之后的表达式。最常用在分组中。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>(sponge|mud) bath </span><span
  style='font-family:宋体'>匹配</span><span lang=EN-US>“sponge bath”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“mud bath”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>转义符</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>\</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>按原义匹配反斜杠</span><span
  lang=EN-US> (\) </span><span style='font-family:宋体'>之后的字符。这使您可以查找正则表达式表示法中使用的字符，如</span><span
  lang=EN-US> { </span><span style='font-family:宋体'>和</span><span lang=EN-US> ^</span><span
  style='font-family:宋体'>。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>\^ </span><span
  style='font-family:宋体'>搜索</span><span lang=EN-US> ^ </span><span
  style='font-family:宋体'>字符。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>带标记的表达式</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>{}</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配以带括号的表达式标记的文本。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>zo{1} </span><span
  style='font-family:宋体'>匹配</span><span lang=EN-US>“Alonzo1”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“Gonzo1”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“zo1”</span><span
  style='font-family:宋体'>，但不匹配</span><span lang=EN-US>“zone”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“zo”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>带引号的字符串</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>:q</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>表达式</span><span
  lang=EN-US> ((&quot;[^&quot;]*&quot;)|('[^']*')) </span><span
  style='font-family:宋体'>的简写形式，它匹配用双引号或单引号括起来的所有字符，还匹配引号本身。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>:q </span><span
  style='font-family:宋体'>匹配</span><span lang=EN-US>“</span><span
  style='font-family:宋体'>测试引用</span><span lang=EN-US>”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>‘</span><span
  style='font-family:宋体'>测试引用</span><span lang=EN-US>’</span><span
  style='font-family:宋体'>，但不匹配</span><span lang=EN-US>“can't”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“'t”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>空格或制表符</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>:b</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配空格或制表符。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>Public:bInterface </span><span
  style='font-family:宋体'>匹配文本中的短语</span><span lang=EN-US>“Public Interface”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td width="11%" valign=top style='width:11.46%;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>整数</span></p>
  </td>
  <td width="8%" valign=top style='width:8.68%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>:z</span></p>
  </td>
  <td width="40%" valign=top style='width:40.36%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>表达式</span><span
  lang=EN-US> ([0-9]+) </span><span style='font-family:宋体'>的简写形式，它匹配数字字符的任何组合。</span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配任何整数，如</span><span
  lang=EN-US>“1”</span><span style='font-family:宋体'>、</span><span lang=EN-US>“234”</span><span
  style='font-family:宋体'>、</span><span lang=EN-US>“56”</span><span
  style='font-family:宋体'>等等。</span></p>
  </td>
 </tr>
</table>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>在查找和替换过程中，还要控制匹配的数量和重复次数，以及匹配的具体位置，可以通过表</span>5-3<span
style='font-family:宋体'>中的正则表达式语法规则来限定。</span></p>

<p class=a8 style='text-indent:20.0pt'><span style='font-family:黑体'>表</span><span
lang=EN-US>5-3</span><span style='font-family:黑体'>匹配方式控制</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width="98%"
 style='width:98.9%;border-collapse:collapse;border:none'>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>表达式</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>语法</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>说明</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>示例</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>最少、零个或更多个</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>@</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配前面表达式的</span><span
  lang=EN-US> 0 </span><span style='font-family:宋体'>个或更多搜索项，并匹配尽可能少的字符。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US><a href="mailto:e.@e"><span
  style='color:windowtext'>e.@e</span></a> </span><span style='font-family:
  宋体'>匹配</span><span lang=EN-US>“enterprise”</span><span style='font-family:
  宋体'>中的</span><span lang=EN-US>“ente”</span><span style='font-family:宋体'>和</span><span
  lang=EN-US>“erprise”</span><span style='font-family:宋体'>，但不匹配完整的单词</span><span
  lang=EN-US>“enterprise”</span><span style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>最少、一个或更多个</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>#</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配前面表达式的一个或更多搜索项，并匹配尽可能少的字符。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>ac# </span><span
  style='font-family:宋体'>匹配包含字母</span><span lang=EN-US>“a”</span><span
  style='font-family:宋体'>和至少一个字母</span><span lang=EN-US>“c”</span><span
  style='font-family:宋体'>的单词，如</span><span lang=EN-US>“ace”</span><span
  style='font-family:宋体'>。</span></p>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>a.#s </span><span
  style='font-family:宋体'>匹配单词</span><span lang=EN-US>“access”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“acces”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>重复</span><span
  lang=EN-US> n </span><span style='font-family:宋体'>次</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>^n</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配前面表达式的</span><span
  lang=EN-US> n </span><span style='font-family:宋体'>次出现。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>[0-9]^4 </span><span
  style='font-family:宋体'>匹配任意</span><span lang=EN-US> 4 </span><span
  style='font-family:宋体'>位数字的序列。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>分组</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>()</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>允许将一组表达式组合在一起。如果要在一次操作中搜索两个不同的表达式，可以使用分组表达式来组合这两个表达式。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>如果要搜索</span><span
  lang=EN-US> - [a-z][1-3] </span><span style='font-family:宋体'>或</span><span
  lang=EN-US> - [1-10][a-z]</span><span style='font-family:宋体'>，应按如下方式组合这两个表达式：</span><span
  lang=EN-US>([a-z][1-3]) | ([1-10][a-z])</span><span style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>第</span><span
  lang=EN-US> n </span><span style='font-family:宋体'>个带标记的文本</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>\n</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>在</span><span
  lang=EN-US>“</span><span style='font-family:宋体'>查找</span><span lang=EN-US>”</span><span
  style='font-family:宋体'>或</span><span lang=EN-US>“</span><span
  style='font-family:宋体'>替换</span><span lang=EN-US>”</span><span
  style='font-family:宋体'>表达式中，指示第</span><span lang=EN-US> n </span><span
  style='font-family:宋体'>个带标记的表达式所匹配的文本，其中</span><span lang=EN-US> n </span><span
  style='font-family:宋体'>是从</span><span lang=EN-US> 1 </span><span
  style='font-family:宋体'>至</span><span lang=EN-US> 9 </span><span
  style='font-family:宋体'>的数字。在</span><span lang=EN-US>“</span><span
  style='font-family:宋体'>替换</span><span lang=EN-US>”</span><span
  style='font-family:宋体'>表达式中，</span><span lang=EN-US>\0 </span><span
  style='font-family:宋体'>插入整个匹配的文本。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>如果搜索</span><span
  lang=EN-US> a{[0-9]}</span><span style='font-family:宋体'>，并替换为</span><span
  lang=EN-US> \1</span><span style='font-family:宋体'>，则</span><span lang=EN-US>“a”</span><span
  style='font-family:宋体'>后跟数字的所有搜索项由跟随的数字替换。例如，</span><span lang=EN-US>“a1”</span><span
  style='font-family:宋体'>由</span><span lang=EN-US>“1”</span><span
  style='font-family:宋体'>替换，类似地，</span><span lang=EN-US>“a2”</span><span
  style='font-family:宋体'>由</span><span lang=EN-US>“2”</span><span
  style='font-family:宋体'>替换。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>禁止匹配</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>~(X)</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>当</span><span
  lang=EN-US> X </span><span style='font-family:宋体'>出现在表达式中的此位置时禁止匹配。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>real~(ity) </span><span
  style='font-family:宋体'>匹配</span><span lang=EN-US>“realty”</span><span
  style='font-family:宋体'>和</span><span lang=EN-US>“really”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“real”</span><span
  style='font-family:宋体'>，但不匹配</span><span lang=EN-US>“reality”</span><span
  style='font-family:宋体'>中的</span><span lang=EN-US>“real”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>字母数字字符</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>:a</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配表达式</span><span
  lang=EN-US> ([a-zA-Z0-9])</span><span style='font-family:宋体'>。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配任何字母数字字符，如</span><span
  lang=EN-US>“a”</span><span style='font-family:宋体'>、</span><span lang=EN-US>“A”</span><span
  style='font-family:宋体'>、</span><span lang=EN-US>“w”</span><span
  style='font-family:宋体'>、</span><span lang=EN-US>“W”</span><span
  style='font-family:宋体'>、</span><span lang=EN-US>“5”</span><span
  style='font-family:宋体'>等等。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>字母字符</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>:c</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配表达式</span><span
  lang=EN-US> ([a-zA-Z])</span><span style='font-family:宋体'>。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配任何字母字符，如</span><span
  lang=EN-US>“a”</span><span style='font-family:宋体'>、</span><span lang=EN-US>“A”</span><span
  style='font-family:宋体'>、</span><span lang=EN-US>“w”</span><span
  style='font-family:宋体'>、</span><span lang=EN-US>“W”</span><span
  style='font-family:宋体'>等等。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>十进制数字</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>:d</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配表达式</span><span
  lang=EN-US> ([0-9])</span><span style='font-family:宋体'>。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配任何数字，如</span><span
  lang=EN-US>“4”</span><span style='font-family:宋体'>和</span><span lang=EN-US>“6”</span><span
  style='font-family:宋体'>。</span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>字母字符串</span></p>
  </td>
  <td width="9%" valign=top style='width:9.24%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span lang=EN-US>:w</span></p>
  </td>
  <td width="36%" valign=top style='width:36.78%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配表达式</span><span
  lang=EN-US> ([a-zA-Z]+)</span><span style='font-family:宋体'>。</span></p>
  </td>
  <td width="38%" valign=top style='width:38.54%;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=a4 style='text-indent:0cm'><span style='font-family:宋体'>匹配任何仅包含字母字符的字符串。</span></p>
  </td>
 </tr>
</table>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>通过以上两个表格中规定的正则表达式语法规则，也就是类似字符串格式设置，我们就可以对任意字符串进行有条件的查找和替换。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>以下代码是一个控制台应用程序，此程序使用正则表达式验证数组中每个字符串的格式。验证要求每个字符串具有电话号码的形式，即用短划线将数字分成三组，前两组各包含三个数字，第三组包含四个数字。这是通过正则表达式</span>
^\\d{3}-\\d{3}-\\d{4}$ <span style='font-family:宋体'>完成的。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>5-3-1<span style='font-family:宋体'>】使用正则表达式搜索数字。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>（代码位置：光盘</span>\<span
style='font-family:宋体'>源代码</span>\chapter5\regxTest<span style='font-family:
宋体'>）</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System.Collections.Generic;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System.Linq;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>using
System.Text;</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>namespace
regxTest</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
class Program</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
static void Main(string[] args)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>//</span><span
style='font-family:宋体;color:windowtext'>定义字符串数组</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string[] numbers = </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;123-456-7890&quot;, </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;444-234-22450&quot;, </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;690-203-6578&quot;, </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;146-893-232&quot;,</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;146-839-2322&quot;,</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;4007-295-1111&quot;, </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;407-295-1111&quot;, </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;407-2-5555&quot;, </span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
};</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string sPattern = &quot;^\\d{3}-\\d{3}-\\d{4}$&quot;;//</span><span
style='font-family:宋体;color:windowtext'>定义匹配模式，检索符合条件的数字</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
foreach (string s in numbers)</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.Console.Write(&quot;{0,14}&quot;, s);//</span><span style='font-family:
宋体;color:windowtext'>定义输出对齐格式</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>判断是否符合正则表达式规则</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if (System.Text.RegularExpressions.Regex.IsMatch(s, sPattern))</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.Console.WriteLine(&quot; - </span><span style='font-family:宋体;
color:windowtext'>有效</span><span lang=EN-US style='color:windowtext'>&quot;);//</span><span
style='font-family:宋体;color:windowtext'>有效</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
else</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.Console.WriteLine(&quot; - </span><span style='font-family:宋体;
color:windowtext'>无效</span><span lang=EN-US style='color:windowtext'>&quot;);//</span><span
style='font-family:宋体;color:windowtext'>无效</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a style='text-indent:18.0pt'><span lang=EN-US style='color:windowtext'>}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>5-8<span
style='font-family:宋体'>所示：</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img border=0
width=171 height=89 src="5.files/image009.jpg"></span></p>

<p class=a2><span style='font-family:宋体'>图</span><span lang=EN-US>5-8 </span><span
style='font-family:宋体'>输出结果</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>说明：代码中的</span>Write<span
style='font-family:宋体'>方法也是</span>Console<span style='font-family:宋体'>类的方法，与</span>WriteLine<span
style='font-family:宋体'>的区别是，输出的时候不会自动回车换行，因此，后续输出内容将紧随其后。</span></p>

<h3><a name="_Toc240797291"></a><a name="_Toc239221218"></a><span lang=EN-US>5.3.2</span><span lang=EN-US>&nbsp; </span><span style='font-family:黑体'>高级正则表达式操作</span></h3>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本节通过几个示例介绍经常使用的几种正则表达式操作，同时介绍使用的几种常用方法。这些对象都在系统命名空间</span>
System.Text.RegularExpressions<span style='font-family:宋体'>中。其中的</span>Regex<span
style='font-family:宋体'>类包含了有关正则表达式的操作，常用的有：</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>IsMatch(<i>string</i>)
</span><span style='font-family:宋体'>。判断是否成功匹配了操作模式，返回值为</span><span lang=EN-US>True/False</span><span
style='font-family:宋体'>。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>Match(<i>string</i>)
</span><span style='font-family:宋体'>。在输入字符串中搜索正则表达式的匹配项，并将精确结果作为单个</span><span
lang=EN-US> Match </span><span style='font-family:宋体'>对象返回。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>Matches(<i>string</i>)</span><span
style='font-family:宋体'>。在输入字符串中搜索正则表达式的所有匹配项，并返回所有成功的匹配对象的集合，就像多次调用</span><span
lang=EN-US> Match </span><span style='font-family:宋体'>一样。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>Replace(<i>pattern,
string</i>)</span><span style='font-family:宋体'>。在指定的输入字符串内，使用指定的替换字符串替换与某个正则表达式模式匹配的字符串。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>Split(<i>string</i>,
<i>pattern</i>)</span><span style='font-family:宋体'>。在由正则表达式匹配项定义的位置将输入字符串拆分为一个子字符串数组。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>其中，</span>Match<span
style='font-family:宋体'>既是一个方法名也是一个对象名，作为对象名称，代表表示单个正则表达式匹配的结果。多个</span>Match<span
style='font-family:宋体'>对象就可以构成新对象</span>MatchCollection<span style='font-family:
宋体'>，就是</span>Match<span style='font-family:宋体'>的集合。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>这则表达式操作中，有一个参数选项</span>RegexOptions<span
style='font-family:宋体'>，</span>C# <span style='font-family:宋体'>预定义了设置值，这些设置包括：</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>None</span><span
style='font-family:宋体'>，没有选项设置。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>IgnoreCase</span><span
style='font-family:宋体'>，忽略大小写敏感，默认匹配是区分大小写的。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>Multiline</span><span
style='font-family:宋体'>，多行匹配，针对每行都进行匹配。行是以“</span><span lang=EN-US>^</span><span
style='font-family:宋体'>”标记开始，以“</span><span lang=EN-US>$</span><span
style='font-family:宋体'>”标记结束。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>Compiled</span><span
style='font-family:宋体'>，是否编译匹配模式，虽然编译导致表达式匹配速度变慢，但如果重复使用这种匹配模式，则速度会加快。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>IgnorePatternWhiteSpace</span><span
style='font-family:宋体'>，</span> <span style='font-family:宋体'>消除模式中的非转义空白并启用由</span><span
lang=EN-US> # </span><span style='font-family:宋体'>标记的注释。但是，</span><span
lang=EN-US>IgnorePatternWhitespace </span><span style='font-family:宋体'>值不会影响或消除字符类中的空白。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>ExplicitCapture</span><span
style='font-family:宋体'>，指定有效的捕获仅为形式为</span><span lang=EN-US> (?&lt;name&gt;...)
</span><span style='font-family:宋体'>的显式命名或编号的组。这使未命名的圆括号可以充当非捕获组，并且不会使表达式的语法</span><span
lang=EN-US> (?:...) </span><span style='font-family:宋体'>显得笨拙。</span></p>

<p class=MsoNormal style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>l </span><span lang=EN-US>SingleLine</span><span
style='font-family:宋体'>，指定单行模式。更改点</span><span lang=EN-US> (.) </span><span
style='font-family:宋体'>的含义，使它与每一个字符匹配（而不是与除</span><span lang=EN-US> \n </span><span
style='font-family:宋体'>之外的每个字符匹配）。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>了解了以上基本知识还有，我们就可以动手编写一些测试程序，练习如何使用这些基本方法来实现正则表达式搜索。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>1. IsMatch() </span><span
style='font-family:楷体_GB2312'>和</span><span lang=EN-US> Match() </span><span
style='font-family:楷体_GB2312'>方法</span><span lang=EN-US> </span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本示例采用模式“</span>[a-z]\d<span
style='font-family:宋体'>”，查询</span>a-z<span style='font-family:宋体'>之间的字符和一个数字。如果字符串匹配着各种模式，则返回字符串内容到</span>Match<span
style='font-family:宋体'>对象中。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>5-3-2<span style='font-family:宋体'>】字母和一个数字的匹配。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>（代码位置：光盘</span>\<span
style='font-family:宋体'>源代码</span>\chapter5\regxExample<span style='font-family:
宋体'>）</span></p>

<p class=a><span lang=EN-US>1.&nbsp; using System;</span></p>

<p class=a><span lang=EN-US>2.&nbsp; using System.Collections.Generic;</span></p>

<p class=a><span lang=EN-US>3.&nbsp; using System.Text;</span></p>

<p class=a><span lang=EN-US>4.&nbsp; using System.Text.RegularExpressions;</span></p>

<p class=a><span lang=EN-US>5..&nbsp; /* IsMatch</span><span style='font-family:
宋体'>和</span><span lang=EN-US>Match</span><span style='font-family:宋体'>的使用练习</span><span
lang=EN-US>*/</span></p>

<p class=a><span lang=EN-US>6.&nbsp; namespace regxExample</span></p>

<p class=a><span lang=EN-US>7.&nbsp; {</span></p>

<p class=a><span lang=EN-US>8.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;class Program</span></p>

<p class=a><span lang=EN-US>9.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;{</span></p>

<p class=a><span lang=EN-US>10.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static
void Main(string[] args)</span></p>

<p class=a><span lang=EN-US>11.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>

<p class=a><span lang=EN-US>12.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string
input = &quot;A12&quot;;</span></p>

<p class=a><span lang=EN-US>13.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span><span
style='font-family:宋体'>定义一个</span><span lang=EN-US> Regex </span><span
style='font-family:宋体'>对象，并设置正则表达式的匹配模式</span></p>

<p class=a><span lang=EN-US>14.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Regex
re = new Regex(@&quot;[a-z]\d&quot;, RegexOptions.IgnoreCase);</span></p>

<p class=a><span lang=EN-US>15.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Match
m = re.Match(input);//</span><span style='font-family:宋体'>进行匹配</span></p>

<p class=a><span lang=EN-US>16.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
(re.IsMatch(input))//</span><span style='font-family:宋体'>判断是否成功</span></p>

<p class=a><span lang=EN-US>17.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a><span lang=EN-US>18.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.Write
(m.Value + &quot;\n&quot;);//</span><span style='font-family:宋体'>输出匹配结果</span></p>

<p class=a><span lang=EN-US>19.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>

<p class=a><span lang=EN-US>20.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.Write(re.IsMatch(input)
+ &quot;\n&quot;);//</span><span style='font-family:宋体'>输出是否匹配的信息</span></p>

<p class=a><span lang=EN-US>21.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span><span
style='font-family:宋体'>直接使用匹配模式，不重新创建对象</span></p>

<p class=a><span lang=EN-US>22.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Match
m2 = Regex.Match(input, @&quot;[a-z]\d&quot;);</span></p>

<p class=a><span lang=EN-US>23.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if
(Regex.IsMatch(input, @&quot;[a-z]\d&quot;))</span></p>

<p class=a><span lang=EN-US>24.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>

<p class=a><span lang=EN-US>25.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.Write(m2.Value
+ &quot;\n&quot;);</span></p>

<p class=a><span lang=EN-US>26.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=a><span lang=EN-US>27.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</span><span
style='font-family:宋体'>输出匹配结果</span></p>

<p class=a><span lang=EN-US>28.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.Write(Regex.IsMatch(input,
@&quot;[a-z]\d&quot;) + &quot;\n&quot;);</span></p>

<p class=a><span lang=EN-US>29.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.ReadLine();</span></p>

<p class=a><span lang=EN-US>30. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>

<p class=a><span lang=EN-US>31.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;}</span></p>

<p class=a><span lang=EN-US>32.&nbsp; }</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span><span
lang=EN-US>5-9</span><span style='font-family:宋体'>所示。</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img border=0
width=132 height=79 src="5.files/image010.jpg"></span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><span
style='font-family:宋体'>图</span><span lang=EN-US>5-9 </span><span
style='font-family:宋体'>示例</span><span lang=EN-US>1</span><span
style='font-family:宋体'>输出</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>这两种处理结果说明，通过创建正则表达式对象的方法（</span>14<span
style='font-family:宋体'>行），可以成功匹配字符串并返回处理结果，就是“</span>A1<span style='font-family:
宋体'>”；而第二种使用直接匹配的方法失败了，原因是没有设置</span>IgnoreCase<span style='font-family:宋体'>选项（</span>22<span
style='font-family:宋体'>行），那么小写的模式“</span>a-z<span style='font-family:宋体'>”就无法成功匹配大写的“</span>A<span
style='font-family:宋体'>”。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>2. Matches() </span></h4>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>前面提到，</span>Matches
<span style='font-family:宋体'>方法可以返回一个包含</span>Match<span style='font-family:
宋体'>对象的</span>MatchCollection<span style='font-family:宋体'>对象集合。下面我们通过一个示例来研究这种方法的使用方式。该示例可以把字符串中的每个单词中的字母和一个数字提取出来，并分别输出。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>5-3-3<span style='font-family:宋体'>】使用匹配对象集合。</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>1.&nbsp; /*Matches </span><span
style='font-family:宋体;color:windowtext'>示例</span><span lang=EN-US
style='color:windowtext'> */</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>2.&nbsp; string input2 =
&quot;A12 B34 C56 D78&quot;;</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>3.&nbsp; //</span><span
style='font-family:宋体;color:windowtext'>创建</span><span lang=EN-US
style='color:windowtext'> Regex </span><span style='font-family:宋体;color:windowtext'>对象</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>4.&nbsp; Regex re2 = new
Regex(@&quot;[a-z]\d&quot;, RegexOptions.IgnoreCase);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>5.&nbsp; MatchCollection
mc = re2.Matches(input2);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>6.&nbsp; foreach (Match mt
in mc)//</span><span style='font-family:宋体;color:windowtext'>循环遍历每个</span><span
lang=EN-US style='color:windowtext'>Match</span><span style='font-family:宋体;
color:windowtext'>对象</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>7.&nbsp; {</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>8.&nbsp; Console.Write(mt.ToString()
+ &quot;\n&quot;);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>9.&nbsp; }</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>10.&nbsp; Console.Write(mc.Count.ToString()
+ &quot;\n&quot;);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>11.&nbsp; //</span><span
style='font-family:宋体;color:windowtext'>直接使用，不创建新的</span><span lang=EN-US
style='color:windowtext'> Regex </span><span style='font-family:宋体;color:windowtext'>对象</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>12.&nbsp; MatchCollection
mc2 = Regex.Matches(input2, @&quot;[a-z]\d&quot;, RegexOptions.IgnoreCase);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>13.&nbsp; foreach (Match
mt in mc)</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>14.&nbsp; {</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>15.&nbsp; Console.Write(mt.ToString()
+ &quot;\n&quot;);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>16.&nbsp; }</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>17.&nbsp; Console.Write(mc2.Count.ToString()
+ &quot;\n&quot;);</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>本示例中</span>6-9<span
style='font-family:宋体'>行和</span>12-16<span style='font-family:宋体'>行都是通过循环方式输出每个匹配项，它们的区别是：一个是创建</span>
Regex<span style='font-family:宋体'>对象，另外一个不是。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>通过获取</span>MatchCollection<span
style='font-family:宋体'>对象的</span>Count<span style='font-family:宋体'>属性来返回集合中有多少匹配的字符串项。最终输出结果见图</span>5-10<span
style='font-family:宋体'>所示。</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img border=0
width=164 height=99 src="5.files/image011.jpg"></span></p>

<p class=a2><span style='font-family:宋体'>图</span><span lang=EN-US>5-10 Matches </span><span
style='font-family:宋体'>处理结果</span></p>

<p class=2 style='text-indent:20.0pt'><span lang=EN-US>3. Replace()</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>这个示例代码使用</span><span
lang=EN-US>Replac()</span><span style='font-family:宋体'>方法替换所有匹配的值</span><span
style='font-family:宋体'>，</span><span style='font-family:宋体'>这里用</span><span
style='font-family:宋体'>“</span><span lang=EN-US>XX</span><span
style='font-family:宋体'>”</span><span style='font-family:宋体'>来替换匹配的值。使用的正则表达式与上例相同。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>5-3-4<span style='font-family:宋体'>】替换处理。</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;/* </span><span style='font-family:宋体;color:windowtext'>字符串替换示例</span><span
lang=EN-US style='color:windowtext'>*/</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string input3 = @&quot;A12 B34 C56 D78 E12 F34 G56 H78&quot;;</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>创建对象</span><span
lang=EN-US style='color:windowtext'> Regex</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Regex re3 = new Regex(@&quot;[a-z]\d&quot;, RegexOptions.IgnoreCase);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string newString = re3.Replace(input3, &quot;XX&quot;);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;Console.Write(&quot;\n\n&quot;+newString+&quot;\n\n&quot;);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体;color:windowtext'>直接定义变量</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string newString2 = Regex.Replace(input3, @&quot;[A-Z]\d&quot;,
&quot;XX&quot;);</span></p>

<p class=a><span lang=EN-US style='color:windowtext'>9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.Write(newString2);</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>图</span><span
lang=EN-US>5-11</span><span style='font-family:宋体'>是程序输出结果。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>代码的</span>4<span
style='font-family:宋体'>行和</span>8<span style='font-family:宋体'>行的作用等同，因此输出结果也相同，在输出结果中出现了两行同样的：</span>XX2
XX4 XX6 XX8 XX2 XX4 XX6 XX8<span style='font-family:宋体'>。可以看到，字符串中每个单词的前一个字符和一个数字被“</span>X<span
style='font-family:宋体'>”取代，仅剩下一个数字。</span></p>

<h4 style='text-indent:20.0pt'><span lang=EN-US>4. Split()</span></h4>

<p class=2 style='text-indent:20.0pt'>Split() <span style='font-family:宋体'>方法可以按照正则表达式来分隔字符串。本示例演示按照空格把字符串分割成不同的子串，在正则表达式中，一个空格的表达式模式是“</span>\s<span
style='font-family:宋体'>”。然后，利用循环语句输出被分割出来的各个字符串。</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>【例</span>5-3-5<span style='font-family:宋体'>】分割字符串。</span></p>

<p class=a><span lang=EN-US>1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* </span><span style='font-family:
宋体'>分割字符串的操作示例</span><span lang=EN-US> */</span></p>

<p class=a><span lang=EN-US>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string input5 = &quot;AB1 DE2 FG3 HI4 JK5 LM6 NO7 PQ8 RS9&quot;;</span></p>

<p class=a><span lang=EN-US>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//</span><span style='font-family:宋体'>创建对象</span></p>

<p class=a><span lang=EN-US>4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Regex re5 = new Regex(@&quot;\s&quot;);</span></p>

<p class=a><span lang=EN-US>5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
string[] parts5 = re5.Split(input5);</span></p>

<p class=a><span lang=EN-US>6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
foreach (string part in parts5)</span></p>

<p class=a><span lang=EN-US>7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=a><span lang=EN-US>8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.Write(part + &quot;\n&quot;);</span></p>

<p class=a><span lang=EN-US>9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>输出结果见图</span>5-12<span
style='font-family:宋体'>所示。</span></p>

<p class=a7 style='text-indent:20.0pt'><span lang=EN-US><img border=0
width=188 height=67 src="5.files/image012.jpg">&nbsp;&nbsp;&nbsp; <img
border=0 width=169 height=123 src="5.files/image013.jpg"></span></p>

<p class=a2><span style='font-family:宋体'>图</span><span lang=EN-US>5-11 </span><span
style='font-family:宋体'>替换输出</span><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-family:宋体'>图</span><span lang=EN-US>5-12 </span><span
style='font-family:宋体'>分割字符串</span></p>

<p class=2 style='text-indent:20.0pt'><span style='font-family:宋体'>许多字符串操作都可以使用正则表达式，正则表达式天生就是为处理字符串而存在的。正则表达式本身就是一套复杂的语言技术。本节介绍的只不过是基本的一些操作和表达式模式。但无论什么编程语言设计的表达式处理技术，都要符合国际规定的表达式规范，这些规范请参考微软官方网站上的资料。</span></p>

</div>

</body>

</html>
